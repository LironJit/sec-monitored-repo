name: My plan
level: beginner
author: Jit
version: 0.1
owners:
  default: null
references:
  - https://www.jit.io
tags: []
items:
  - name: There are no dormant GitHub users
    uses: >-
      jitsecurity-controls/jit-plans/items/access_management/item-access-management-dormant-users.yml@latest
  - name: Limit number of organization admins
    uses: >-
      jitsecurity-controls/jit-plans/items/access_management/item-access-management-max-admins.yml@latest
  - name: Enable multi-factor authentication for members
    uses: >-
      jitsecurity-controls/jit-plans/items/access_management/item-access-management-mfa.yml@latest
  - name: Protect code changes by properly setting branch protection
    uses: >-
      jitsecurity-controls/jit-plans/items/branch_protection/item-branch-protect-code-changes.yml@latest
  - name: Set desired branch protection configuration
    uses: >-
      jitsecurity-controls/jit-plans/items/branch_protection/item-branch-set-config.yml@latest
  - name: Scan your code for vulnerabilities (SAST)
    uses: >-
      jitsecurity-controls/jit-plans/items/code/item-code-vulnerability.yml@latest
  - name: Scan your Dockerfiles for vulnerabilities
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-container-scan.yml@latest
  - name: Limit creation of public repos
    uses: >-
      jitsecurity-controls/jit-plans/items/external_exposure/item-external-exposure-limit-creation-repo.yml@latest
  - name: Scan your infrastructure-as-code (IaC) for misconfigurations
    uses: >-
      jitsecurity-controls/jit-plans/items/infrastructure/item-iac-misconfiguration-detection.yml@latest
  - name: Scan code for hard-coded secrets
    uses: jitsecurity-controls/jit-plans/items/code/item-secret-detection.yml@latest
override:
  workflows:
    sast:
      jobs:
        static-code-analysis-js:
          steps:
            - name: Run semgrep javascript and typescript
              uses: registry.jit.io/control-semgrep-alpine:latest
              with:
                args: >-
                  --json --config=/semgrep-ts-config.yml --metrics=off
                  ${WORK_DIR:-.}
    secret-detection:
      jobs:
        secret-detection:
          steps:
            - name: Run Gitleaks
              uses: registry.jit.io/control-gitleaks-alpine:latest
              with:
                args: >-
                  detect --config /.jit/gitleaks.toml --source ${WORK_DIR:-.} -v
                  --report-format json --report-path $REPORT_FILE --redact
                  --no-git --exit-code 0
                output_file: /tmp/report.json
