{
    "openapi": "3.1.0",
    "paths": {
      "/public/v1/auditLogs/search": {
        "post": {
          "operationId": "AuditLogs_search",
          "summary": "Search audit logs (Experimental)",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "minDate": {
                      "type": "string",
                      "example": "2021-01-21",
                      "format": "date"
                    },
                    "maxDate": {
                      "type": "string",
                      "example": "2021-01-21",
                      "format": "date"
                    },
                    "type": {
                      "type": "array",
                      "description": "Audit log types to search",
                      "items": {
                        "type": "array",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ]
                      }
                    }
                  },
                  "required": [
                    "minDate"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "accessReview": {
                                  "type": "string",
                                  "example": "Access review 123",
                                  "description": "Name of the access review"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "approvalAlgorithm": {
                                  "type": "string",
                                  "example": "Approval algorithm 123",
                                  "description": "Name of the approval algorithm"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "bundle": {
                                  "type": "string",
                                  "example": "Bundle 123",
                                  "description": "Name of the bundle"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "integration": {
                                  "type": "string",
                                  "example": "Integration 123",
                                  "description": "Name of the integration"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "integrationResource": {
                                  "type": "string",
                                  "example": "Resource 123",
                                  "description": "Name of the resource"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "integrationResourceRole": {
                                  "type": "string",
                                  "example": "Role 123",
                                  "description": "Name of the role"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "policy": {
                                  "type": "number",
                                  "example": "1",
                                  "description": "Number of the policy"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "createdAt": {
                                  "format": "date-time",
                                  "type": "string",
                                  "example": "2021-01-21T00:00:00.000Z",
                                  "description": "Date of the audit log"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "accessReview.created",
                                    "accessReview.deleted",
                                    "accessReview.updated",
                                    "accessReview.activated",
                                    "approvalAlgorithm.created",
                                    "approvalAlgorithm.deleted",
                                    "approvalAlgorithm.updated",
                                    "bundle.created",
                                    "bundle.deleted",
                                    "bundle.updated",
                                    "company.failed.sync.directories.groups",
                                    "company.failed.sync.directories.users",
                                    "company.failed.sync.hr.directManagers",
                                    "company.policy.permissions.updated",
                                    "company.policy.user.missingActors",
                                    "company.sync.directories.groups",
                                    "company.sync.directories.users",
                                    "company.sync.hr.directManagers",
                                    "integration.failed.access.give",
                                    "integration.failed.access.revoke",
                                    "integration.failed.sync.actors",
                                    "integration.failed.sync.assets",
                                    "integration.failed.sync.permissions",
                                    "integration.sync.actors",
                                    "integration.sync.assets",
                                    "integration.sync.permissions",
                                    "integration.updated.allowAsGrantMethod",
                                    "integration.updated.allowedDurations",
                                    "integration.updated.allowsRequests",
                                    "integration.updated.approvalAlgorithm",
                                    "integration.updated.autoAssignRecommendedResourceMaintainers",
                                    "integration.updated.autoAssignRecommendedResourceOwner",
                                    "integration.updated.canCreateActors",
                                    "integration.updated.canEditPermissions",
                                    "integration.updated.configuration",
                                    "integration.updated.defaultAllowAsGrantMethod",
                                    "integration.updated.defaultAllowsRequests",
                                    "integration.updated.image",
                                    "integration.updated.maintainers",
                                    "integration.updated.name",
                                    "integration.updated.notifyAboutExternalPermissions",
                                    "integration.updated.owner",
                                    "integration.updated.readonly",
                                    "integration.created",
                                    "integration.deleted",
                                    "integrationResource.created.manually",
                                    "integrationResource.deleted.manually",
                                    "integrationResource.updated.allowAsGrantMethod",
                                    "integrationResource.updated.allowedDurations",
                                    "integrationResource.updated.allowsRequests",
                                    "integrationResource.updated.approvalAlgorithm",
                                    "integrationResource.updated.displayName",
                                    "integrationResource.updated.maintainers",
                                    "integrationResource.updated.owner",
                                    "integrationResource.updated.userDefinedDescription",
                                    "integrationResource.updated.userDefinedTags",
                                    "integrationResourceRole.created.manually",
                                    "integrationResourceRole.deleted.manually",
                                    "integrationResourceRole.updated.allowAsGrantMethod",
                                    "integrationResourceRole.updated.allowedDurations",
                                    "integrationResourceRole.updated.allowsRequests",
                                    "integrationResourceRole.updated.approvalAlgorithm",
                                    "integrationResourceRole.updated.name",
                                    "policy.updated.data",
                                    "policy.updated.sortOrder",
                                    "policy.created",
                                    "policy.deleted",
                                    "ticket.failed.grant",
                                    "ticket.failed.revoke",
                                    "ticket.redirect.emptyGroup",
                                    "ticket.redirect.forward",
                                    "ticket.redirect.noManagers",
                                    "ticket.redirect.noTeamMembers",
                                    "ticket.redirect.toUser",
                                    "ticket.retry.grant",
                                    "ticket.retry.revoke",
                                    "ticket.sent.grant",
                                    "ticket.sent.revert",
                                    "ticket.sent.revoke",
                                    "ticket.automaticApproval",
                                    "ticket.created",
                                    "ticket.deleted",
                                    "ticket.finalApproved",
                                    "ticket.granted",
                                    "ticket.passedStage",
                                    "ticket.permissionAlreadyExist",
                                    "ticket.permissionReverted",
                                    "ticket.permissionWontRevoke",
                                    "ticket.revoked",
                                    "ticket.statusChanged",
                                    "ticket.taskCreated",
                                    "ticket.userApproved",
                                    "ticket.userDeclined"
                                  ],
                                  "example": "approvalAlgorithm.deleted",
                                  "description": "Type of the audit log"
                                },
                                "user": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User who performed the action"
                                },
                                "ticket": {
                                  "type": "number",
                                  "example": "Ticket 123",
                                  "description": "Number of the ticket"
                                }
                              },
                              "required": [
                                "createdAt",
                                "type"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Experimental"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/permissions": {
        "get": {
          "operationId": "Permissions_index",
          "summary": "Get permissions (Filter by time created, Experimental)",
          "parameters": [
            {
              "name": "sortOrder",
              "required": false,
              "in": "query",
              "schema": {
                "enum": [
                  "ASC",
                  "DESC",
                  "asc",
                  "desc"
                ],
                "type": "string"
              }
            },
            {
              "name": "date",
              "required": false,
              "in": "query",
              "example": "2021-01-21",
              "description": "Filter permissions up to a certain point in time",
              "schema": {
                "format": "date",
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "createdAt": {
                              "format": "date-time",
                              "type": "string",
                              "example": "2021-01-21T00:00:00.000Z",
                              "description": "Date of the permission creation"
                            },
                            "deprecatedAt": {
                              "format": "date-time",
                              "type": "string",
                              "nullable": true,
                              "example": "2021-01-21T00:00:00.000Z",
                              "description": "Date of the permission deprecation"
                            },
                            "actor": {
                              "description": "Permission's actor",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Actor's display name"
                                    },
                                    "users": {
                                      "description": "Users associated with the actor",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "Entity name"
                                          },
                                          "email": {
                                            "type": "string",
                                            "example": "user@org.domain",
                                            "description": "User's email"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "email"
                                        ]
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "users"
                                  ]
                                }
                              ]
                            },
                            "integration": {
                              "description": "Permission's integration",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Entity name"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "resource": {
                              "description": "Permission's resource",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Entity name"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            },
                            "role": {
                              "description": "Permission's role",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Entity name"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "createdAt",
                            "actor",
                            "integration",
                            "resource",
                            "role"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Experimental"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/workflows": {
        "get": {
          "operationId": "Workflows_index",
          "summary": "Get a list of workflows",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            }
                          },
                          "required": [
                            "name",
                            "id"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Workflows"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "Workflows_create",
          "summary": "Create a new workflow",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "rules": {
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the group"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "inSchedules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier of the schedule"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "underDuration": {
                            "nullable": true,
                            "type": "number",
                            "enum": [
                              3600,
                              10800,
                              21600,
                              43200,
                              57600,
                              86400,
                              259200,
                              604800,
                              2628000,
                              7884000,
                              15768000,
                              31536000,
                              63072000,
                              -1
                            ]
                          },
                          "approvalFlow": {
                            "type": "object",
                            "properties": {
                              "steps": {
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "operator": {
                                      "type": "string",
                                      "enum": [
                                        "and",
                                        "or"
                                      ]
                                    },
                                    "approvalEntities": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectoryGroup"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the group"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OnCallIntegrationSchedule"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier of the schedule"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "User"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the user"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Automatic",
                                                  "DirectManager",
                                                  "IntegrationMaintainer",
                                                  "IntegrationOwner",
                                                  "ResourceMaintainer",
                                                  "ResourceOwner",
                                                  "TeamMember"
                                                ]
                                              },
                                              "entity": {
                                                "type": "null",
                                                "example": null,
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "notifiedEntities": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectoryGroup"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the group"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OnCallIntegrationSchedule"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier of the schedule"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "User"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the user"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectManager",
                                                  "IntegrationMaintainer",
                                                  "IntegrationOwner",
                                                  "ResourceMaintainer",
                                                  "ResourceOwner",
                                                  "TeamMember"
                                                ]
                                              },
                                              "entity": {
                                                "type": "null",
                                                "example": null,
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "sortOrder": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "operator",
                                    "approvalEntities",
                                    "notifiedEntities",
                                    "sortOrder"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "steps"
                            ]
                          },
                          "sortOrder": {
                            "type": "number"
                          },
                          "anySchedule": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "inGroups",
                          "inSchedules",
                          "underDuration",
                          "approvalFlow",
                          "sortOrder",
                          "anySchedule"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "rules"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "inGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "inSchedules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "underDuration": {
                                    "nullable": true,
                                    "type": "number",
                                    "enum": [
                                      3600,
                                      10800,
                                      21600,
                                      43200,
                                      57600,
                                      86400,
                                      259200,
                                      604800,
                                      2628000,
                                      7884000,
                                      15768000,
                                      31536000,
                                      63072000,
                                      -1
                                    ]
                                  },
                                  "approvalFlow": {
                                    "type": "object",
                                    "properties": {
                                      "steps": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "and",
                                                "or"
                                              ]
                                            },
                                            "approvalEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Automatic",
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "notifiedEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "sortOrder": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "operator",
                                            "approvalEntities",
                                            "notifiedEntities",
                                            "sortOrder"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "steps"
                                    ]
                                  },
                                  "sortOrder": {
                                    "type": "number"
                                  },
                                  "anySchedule": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "inGroups",
                                  "inSchedules",
                                  "underDuration",
                                  "approvalFlow",
                                  "sortOrder",
                                  "anySchedule"
                                ]
                              }
                            }
                          },
                          "required": [
                            "name",
                            "id",
                            "rules"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Workflows"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/workflows/{id}": {
        "get": {
          "operationId": "Workflows_show",
          "summary": "Get workflow by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "inGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "inSchedules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "underDuration": {
                                    "nullable": true,
                                    "type": "number",
                                    "enum": [
                                      3600,
                                      10800,
                                      21600,
                                      43200,
                                      57600,
                                      86400,
                                      259200,
                                      604800,
                                      2628000,
                                      7884000,
                                      15768000,
                                      31536000,
                                      63072000,
                                      -1
                                    ]
                                  },
                                  "approvalFlow": {
                                    "type": "object",
                                    "properties": {
                                      "steps": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "and",
                                                "or"
                                              ]
                                            },
                                            "approvalEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Automatic",
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "notifiedEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "sortOrder": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "operator",
                                            "approvalEntities",
                                            "notifiedEntities",
                                            "sortOrder"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "steps"
                                    ]
                                  },
                                  "sortOrder": {
                                    "type": "number"
                                  },
                                  "anySchedule": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "inGroups",
                                  "inSchedules",
                                  "underDuration",
                                  "approvalFlow",
                                  "sortOrder",
                                  "anySchedule"
                                ]
                              }
                            }
                          },
                          "required": [
                            "name",
                            "id",
                            "rules"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Workflows"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Workflows_update",
          "summary": "Update a workflow",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "rules": {
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "inGroups": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the group"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "inSchedules": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier of the schedule"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "underDuration": {
                            "nullable": true,
                            "type": "number",
                            "enum": [
                              3600,
                              10800,
                              21600,
                              43200,
                              57600,
                              86400,
                              259200,
                              604800,
                              2628000,
                              7884000,
                              15768000,
                              31536000,
                              63072000,
                              -1
                            ]
                          },
                          "approvalFlow": {
                            "type": "object",
                            "properties": {
                              "steps": {
                                "minItems": 1,
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "operator": {
                                      "type": "string",
                                      "enum": [
                                        "and",
                                        "or"
                                      ]
                                    },
                                    "approvalEntities": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectoryGroup"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the group"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OnCallIntegrationSchedule"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier of the schedule"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "User"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the user"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "Automatic",
                                                  "DirectManager",
                                                  "IntegrationMaintainer",
                                                  "IntegrationOwner",
                                                  "ResourceMaintainer",
                                                  "ResourceOwner",
                                                  "TeamMember"
                                                ]
                                              },
                                              "entity": {
                                                "type": "null",
                                                "example": null,
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "notifiedEntities": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "oneOf": [
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectoryGroup"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the group"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "OnCallIntegrationSchedule"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier of the schedule"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "User"
                                                ]
                                              },
                                              "entity": {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "example": [
                                                      "00000000-0000-0000-0000-000000000000",
                                                      "user@org.domain",
                                                      "uniq-identifier"
                                                    ],
                                                    "description": "A unique identifier/email of the user"
                                                  }
                                                },
                                                "required": [
                                                  "id"
                                                ]
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          },
                                          {
                                            "type": "object",
                                            "properties": {
                                              "type": {
                                                "type": "string",
                                                "enum": [
                                                  "DirectManager",
                                                  "IntegrationMaintainer",
                                                  "IntegrationOwner",
                                                  "ResourceMaintainer",
                                                  "ResourceOwner",
                                                  "TeamMember"
                                                ]
                                              },
                                              "entity": {
                                                "type": "null",
                                                "example": null,
                                                "nullable": true
                                              }
                                            },
                                            "required": [
                                              "type",
                                              "entity"
                                            ]
                                          }
                                        ]
                                      }
                                    },
                                    "sortOrder": {
                                      "type": "number"
                                    }
                                  },
                                  "required": [
                                    "operator",
                                    "approvalEntities",
                                    "notifiedEntities",
                                    "sortOrder"
                                  ]
                                }
                              }
                            },
                            "required": [
                              "steps"
                            ]
                          },
                          "sortOrder": {
                            "type": "number"
                          },
                          "anySchedule": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "inGroups",
                          "inSchedules",
                          "underDuration",
                          "approvalFlow",
                          "sortOrder",
                          "anySchedule"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            },
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "rules": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "inGroups": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "inSchedules": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "minLength": 2,
                                          "maxLength": 50
                                        },
                                        "id": {
                                          "type": "string",
                                          "format": "uuid"
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "id"
                                      ]
                                    }
                                  },
                                  "underDuration": {
                                    "nullable": true,
                                    "type": "number",
                                    "enum": [
                                      3600,
                                      10800,
                                      21600,
                                      43200,
                                      57600,
                                      86400,
                                      259200,
                                      604800,
                                      2628000,
                                      7884000,
                                      15768000,
                                      31536000,
                                      63072000,
                                      -1
                                    ]
                                  },
                                  "approvalFlow": {
                                    "type": "object",
                                    "properties": {
                                      "steps": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "operator": {
                                              "type": "string",
                                              "enum": [
                                                "and",
                                                "or"
                                              ]
                                            },
                                            "approvalEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "Automatic",
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "notifiedEntities": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "oneOf": [
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectoryGroup"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "OnCallIntegrationSchedule"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "minLength": 2,
                                                            "maxLength": 50
                                                          },
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          }
                                                        },
                                                        "required": [
                                                          "name",
                                                          "id"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "User"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "object",
                                                        "properties": {
                                                          "id": {
                                                            "type": "string",
                                                            "format": "uuid"
                                                          },
                                                          "email": {
                                                            "type": "string",
                                                            "format": "email"
                                                          }
                                                        },
                                                        "required": [
                                                          "id",
                                                          "email"
                                                        ]
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  },
                                                  {
                                                    "type": "object",
                                                    "properties": {
                                                      "type": {
                                                        "type": "string",
                                                        "enum": [
                                                          "DirectManager",
                                                          "IntegrationMaintainer",
                                                          "IntegrationOwner",
                                                          "ResourceMaintainer",
                                                          "ResourceOwner",
                                                          "TeamMember"
                                                        ]
                                                      },
                                                      "entity": {
                                                        "type": "null",
                                                        "nullable": true,
                                                        "example": null
                                                      }
                                                    },
                                                    "required": [
                                                      "type",
                                                      "entity"
                                                    ]
                                                  }
                                                ]
                                              }
                                            },
                                            "sortOrder": {
                                              "type": "number"
                                            }
                                          },
                                          "required": [
                                            "operator",
                                            "approvalEntities",
                                            "notifiedEntities",
                                            "sortOrder"
                                          ]
                                        }
                                      }
                                    },
                                    "required": [
                                      "steps"
                                    ]
                                  },
                                  "sortOrder": {
                                    "type": "number"
                                  },
                                  "anySchedule": {
                                    "type": "boolean"
                                  }
                                },
                                "required": [
                                  "inGroups",
                                  "inSchedules",
                                  "underDuration",
                                  "approvalFlow",
                                  "sortOrder",
                                  "anySchedule"
                                ]
                              }
                            }
                          },
                          "required": [
                            "name",
                            "id",
                            "rules"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Workflows"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "Workflows_destroy",
          "summary": "Delete a workflow",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ok": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ok"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Workflows"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/bundles": {
        "get": {
          "operationId": "Bundles_index",
          "summary": "Get a list of bundles",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Bundles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "Bundles_create",
          "summary": "Create a new bundle",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "uniqueItems": true,
                      "description": "If null, the company's default allowed durations will be used",
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "nullable": true,
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 2048
                    },
                    "tags": {
                      "nullable": true,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 2
                      }
                    },
                    "roles": {
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "roles",
                    "workflow"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "allowedDurations": {
                              "nullable": true,
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            },
                            "category": {
                              "type": "string",
                              "nullable": true
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "tags": {
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "00000000-0000-0000-0000-000000000000"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "application",
                                          "name"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "integration",
                                      "name"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "workflow": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "allowedDurations",
                            "category",
                            "description",
                            "tags",
                            "roles",
                            "name",
                            "workflow"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Bundles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/bundles/{id}": {
        "get": {
          "operationId": "Bundles_show",
          "summary": "Get bundle by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "allowedDurations": {
                              "nullable": true,
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            },
                            "category": {
                              "type": "string",
                              "nullable": true
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "tags": {
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "00000000-0000-0000-0000-000000000000"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "application",
                                          "name"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "integration",
                                      "name"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "workflow": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "allowedDurations",
                            "category",
                            "description",
                            "tags",
                            "roles",
                            "name",
                            "workflow"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Bundles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Bundles_update",
          "summary": "Update a bundle",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "uniqueItems": true,
                      "description": "If null, the company's default allowed durations will be used",
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "nullable": true,
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "maxLength": 2048
                    },
                    "tags": {
                      "nullable": true,
                      "type": "array",
                      "items": {
                        "type": "string",
                        "maxLength": 50,
                        "minLength": 2
                      }
                    },
                    "roles": {
                      "minItems": 1,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "allowedDurations": {
                              "nullable": true,
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            },
                            "category": {
                              "type": "string",
                              "nullable": true
                            },
                            "description": {
                              "type": "string",
                              "nullable": true
                            },
                            "tags": {
                              "nullable": true,
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "example": "00000000-0000-0000-0000-000000000000"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          },
                                          "name": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "application",
                                          "name"
                                        ]
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "integration",
                                      "name"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "name": {
                              "type": "string"
                            },
                            "workflow": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "name"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "allowedDurations",
                            "category",
                            "description",
                            "tags",
                            "roles",
                            "name",
                            "workflow"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Bundles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "Bundles_destroy",
          "summary": "Delete a bundle by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ok": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ok"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Bundles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/policies": {
        "get": {
          "operationId": "Policies_index",
          "summary": "Get a list of policies",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "number": {
                              "type": "number"
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "id",
                            "number",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "Policies_create",
          "summary": "Create a new policy",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group",
                              "schedule"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "A unique identifier/email of the group"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      }
                    },
                    "bundles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "sortOrder": {
                      "type": "number",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "inGroups",
                    "bundles",
                    "roles"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "inGroups": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "group",
                                      "schedule"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "bundles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "application"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "integration"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "number": {
                              "type": "number"
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "id",
                            "inGroups",
                            "bundles",
                            "roles",
                            "number",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/policies/{id}": {
        "get": {
          "operationId": "Policies_show",
          "summary": "Get policy by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "inGroups": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "group",
                                      "schedule"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "bundles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "application"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "integration"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "number": {
                              "type": "number"
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "id",
                            "inGroups",
                            "bundles",
                            "roles",
                            "number",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Policies_update",
          "summary": "Update a policy",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inGroups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group",
                              "schedule"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "description": "A unique identifier/email of the group"
                          }
                        },
                        "required": [
                          "type",
                          "id"
                        ]
                      }
                    },
                    "bundles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "sortOrder": {
                      "type": "number",
                      "minimum": 1
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "inGroups": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "enum": [
                                      "group",
                                      "schedule"
                                    ]
                                  },
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "type",
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "bundles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            },
                            "roles": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "resource": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "format": "uuid"
                                      },
                                      "name": {
                                        "type": "string"
                                      },
                                      "integration": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "name": {
                                            "type": "string"
                                          },
                                          "application": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              }
                                            },
                                            "required": [
                                              "name"
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "application"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name",
                                      "integration"
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "resource"
                                ]
                              }
                            },
                            "number": {
                              "type": "number"
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "id",
                            "inGroups",
                            "bundles",
                            "roles",
                            "number",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "Policies_destroy",
          "summary": "Delete a policy",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ok": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ok"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Policies"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/integrations": {
        "get": {
          "operationId": "Integrations_index",
          "summary": "Get a list of integrations",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "00000000-0000-0000-0000-000000000000"
                            },
                            "application": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "application",
                            "name"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Integrations"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "post": {
          "operationId": "Integrations_create",
          "summary": "Create a new integration",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "uniqueItems": true,
                      "description": "If null, the company's default allowed durations will be used",
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "maintainers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "group": {
                                "description": "If type is group, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the group"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "group"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "user"
                                ]
                              },
                              "user": {
                                "description": "If type is user, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the user"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "user"
                            ]
                          }
                        ]
                      }
                    },
                    "application": {
                      "example": {
                        "name": "Google Groups"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      ]
                    },
                    "agentToken": {
                      "example": {
                        "name": "On prem agent"
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 2,
                              "maxLength": 50
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      ]
                    },
                    "allowChangingAccountPermissions": {
                      "type": "boolean"
                    },
                    "allowCreatingAccounts": {
                      "type": "boolean"
                    },
                    "readonly": {
                      "type": "boolean"
                    },
                    "connectionJson": {
                      "type": "object",
                      "nullable": true
                    },
                    "allowRequests": {
                      "type": "boolean"
                    },
                    "allowRequestsByDefault": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethod": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethodByDefault": {
                      "type": "boolean"
                    },
                    "autoAssignRecommendedMaintainers": {
                      "type": "boolean"
                    },
                    "autoAssignRecommendedOwners": {
                      "type": "boolean"
                    },
                    "notifyAboutExternalPermissionChanges": {
                      "type": "boolean"
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "user@org.domain",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier/email of the user"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "maintainers",
                    "application",
                    "allowChangingAccountPermissions",
                    "allowCreatingAccounts",
                    "readonly",
                    "connectionJson",
                    "allowRequests",
                    "allowRequestsByDefault",
                    "allowAsGrantMethod",
                    "allowAsGrantMethodByDefault",
                    "autoAssignRecommendedMaintainers",
                    "autoAssignRecommendedOwners",
                    "notifyAboutExternalPermissionChanges",
                    "workflow",
                    "owner"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "workflow": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "maintainers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "group"
                                      ]
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "group"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "user"
                                  ]
                                }
                              ]
                            }
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "allowChangingAccountPermissions": {
                            "type": "boolean"
                          },
                          "allowCreatingAccounts": {
                            "type": "boolean"
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowRequestsByDefault": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethodByDefault": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedOwners": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedMaintainers": {
                            "type": "boolean"
                          },
                          "notifyAboutExternalPermissionChanges": {
                            "type": "boolean"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "application",
                          "allowedDurations",
                          "workflow",
                          "maintainers",
                          "readonly",
                          "allowChangingAccountPermissions",
                          "allowCreatingAccounts",
                          "allowRequests",
                          "allowRequestsByDefault",
                          "allowAsGrantMethod",
                          "allowAsGrantMethodByDefault",
                          "autoAssignRecommendedOwners",
                          "autoAssignRecommendedMaintainers",
                          "notifyAboutExternalPermissionChanges",
                          "owner",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            },
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            }
          },
          "tags": [
            "Integrations"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/integrations/{id}": {
        "get": {
          "operationId": "Integrations_show",
          "summary": "Get integration by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "workflow": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "maintainers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "group"
                                      ]
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "group"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "user"
                                  ]
                                }
                              ]
                            }
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "allowChangingAccountPermissions": {
                            "type": "boolean"
                          },
                          "allowCreatingAccounts": {
                            "type": "boolean"
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowRequestsByDefault": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethodByDefault": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedOwners": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedMaintainers": {
                            "type": "boolean"
                          },
                          "notifyAboutExternalPermissionChanges": {
                            "type": "boolean"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "application",
                          "allowedDurations",
                          "workflow",
                          "maintainers",
                          "readonly",
                          "allowChangingAccountPermissions",
                          "allowCreatingAccounts",
                          "allowRequests",
                          "allowRequestsByDefault",
                          "allowAsGrantMethod",
                          "allowAsGrantMethodByDefault",
                          "autoAssignRecommendedOwners",
                          "autoAssignRecommendedMaintainers",
                          "notifyAboutExternalPermissionChanges",
                          "owner",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Integrations"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Integrations_update",
          "summary": "Update integration by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "uniqueItems": true,
                      "description": "If null, the company's default allowed durations will be used",
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "maintainers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "group": {
                                "description": "If type is group, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the group"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "group"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "user"
                                ]
                              },
                              "user": {
                                "description": "If type is user, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the user"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "user"
                            ]
                          }
                        ]
                      }
                    },
                    "connectionJson": {
                      "type": "object"
                    },
                    "allowRequests": {
                      "type": "boolean"
                    },
                    "allowRequestsByDefault": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethod": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethodByDefault": {
                      "type": "boolean"
                    },
                    "autoAssignRecommendedMaintainers": {
                      "type": "boolean"
                    },
                    "autoAssignRecommendedOwners": {
                      "type": "boolean"
                    },
                    "notifyAboutExternalPermissionChanges": {
                      "type": "boolean"
                    },
                    "workflow": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "user@org.domain",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier/email of the user"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "workflow": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name"
                            ]
                          },
                          "maintainers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "group"
                                      ]
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "group"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "user"
                                  ]
                                }
                              ]
                            }
                          },
                          "readonly": {
                            "type": "boolean"
                          },
                          "allowChangingAccountPermissions": {
                            "type": "boolean"
                          },
                          "allowCreatingAccounts": {
                            "type": "boolean"
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowRequestsByDefault": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethodByDefault": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedOwners": {
                            "type": "boolean"
                          },
                          "autoAssignRecommendedMaintainers": {
                            "type": "boolean"
                          },
                          "notifyAboutExternalPermissionChanges": {
                            "type": "boolean"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "application",
                          "allowedDurations",
                          "workflow",
                          "maintainers",
                          "readonly",
                          "allowChangingAccountPermissions",
                          "allowCreatingAccounts",
                          "allowRequests",
                          "allowRequestsByDefault",
                          "allowAsGrantMethod",
                          "allowAsGrantMethodByDefault",
                          "autoAssignRecommendedOwners",
                          "autoAssignRecommendedMaintainers",
                          "notifyAboutExternalPermissionChanges",
                          "owner",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Integrations"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "delete": {
          "operationId": "Integrations_destroy",
          "summary": "Delete integration by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "ok": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "ok"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Integrations"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/resources": {
        "get": {
          "operationId": "Resources_index",
          "summary": "Get a list of resources",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            },
            {
              "name": "search",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "integrationId",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "00000000-0000-0000-0000-000000000000"
                            },
                            "integration": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "00000000-0000-0000-0000-000000000000"
                                },
                                "application": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "application",
                                "name"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "integration",
                            "name"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Resources"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/resources/{id}": {
        "get": {
          "operationId": "Resources_show",
          "summary": "Get a resource by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "integration": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "application": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "application",
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "tags": {
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "userDefinedTags": {
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "userDefinedDescription": {
                            "type": "string",
                            "nullable": true
                          },
                          "workflow": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "maintainers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "group"
                                      ]
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "group"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "user"
                                  ]
                                }
                              ]
                            }
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "owner": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "user@org.domain"
                                  }
                                },
                                "required": [
                                  "id",
                                  "email"
                                ]
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "integration",
                          "allowedDurations",
                          "tags",
                          "userDefinedTags",
                          "description",
                          "userDefinedDescription",
                          "workflow",
                          "maintainers",
                          "allowRequests",
                          "allowAsGrantMethod",
                          "owner",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Resources"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Resources_update",
          "summary": "Update a resource",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "userDefinedDescription": {
                      "type": "string",
                      "maxLength": 2048
                    },
                    "userDefinedTags": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "tag"
                      },
                      "minLength": 2,
                      "maxLength": 50
                    },
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "maintainers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "group"
                                ]
                              },
                              "group": {
                                "description": "If type is group, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the group"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "group"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "user"
                                ]
                              },
                              "user": {
                                "description": "If type is user, this field is required with a unique id/email",
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "example": [
                                          "00000000-0000-0000-0000-000000000000",
                                          "user@org.domain",
                                          "uniq-identifier"
                                        ],
                                        "description": "A unique identifier/email of the user"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  }
                                ]
                              }
                            },
                            "required": [
                              "type",
                              "user"
                            ]
                          }
                        ]
                      }
                    },
                    "allowRequests": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethod": {
                      "type": "boolean"
                    },
                    "workflow": {
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "00000000-0000-0000-0000-000000000000"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    },
                    "owner": {
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": [
                                "00000000-0000-0000-0000-000000000000",
                                "user@org.domain",
                                "uniq-identifier"
                              ],
                              "description": "A unique identifier/email of the user"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "integration": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "application": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "name"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "application",
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "tags": {
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "userDefinedTags": {
                            "nullable": true,
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          },
                          "userDefinedDescription": {
                            "type": "string",
                            "nullable": true
                          },
                          "workflow": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "maintainers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "group"
                                      ]
                                    },
                                    "group": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "group"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "enum": [
                                        "user"
                                      ]
                                    },
                                    "user": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "format": "uuid",
                                          "example": "00000000-0000-0000-0000-000000000000"
                                        },
                                        "email": {
                                          "type": "string",
                                          "format": "email",
                                          "example": "user@org.domain"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "email"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "user"
                                  ]
                                }
                              ]
                            }
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "owner": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "email": {
                                    "type": "string",
                                    "format": "email",
                                    "example": "user@org.domain"
                                  }
                                },
                                "required": [
                                  "id",
                                  "email"
                                ]
                              }
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "integration",
                          "allowedDurations",
                          "tags",
                          "userDefinedTags",
                          "description",
                          "userDefinedDescription",
                          "workflow",
                          "maintainers",
                          "allowRequests",
                          "allowAsGrantMethod",
                          "owner",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Resources"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/roles": {
        "get": {
          "operationId": "Roles_index",
          "summary": "Get a list of roles",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 100,
                "type": "number"
              }
            },
            {
              "name": "resourceId",
              "required": true,
              "in": "query",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            },
            {
              "name": "search",
              "required": false,
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "pagination": {
                        "type": "object",
                        "properties": {
                          "page": {
                            "type": "number",
                            "minimum": 1,
                            "description": "Current page"
                          },
                          "perPage": {
                            "type": "number",
                            "minimum": 1,
                            "maximum": 100,
                            "description": "Number of results per page"
                          },
                          "totalResults": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of results"
                          },
                          "totalPages": {
                            "type": "number",
                            "minimum": 0,
                            "description": "Total number of pages"
                          }
                        },
                        "required": [
                          "page",
                          "perPage",
                          "totalResults",
                          "totalPages"
                        ]
                      },
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "00000000-0000-0000-0000-000000000000"
                            },
                            "resource": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "00000000-0000-0000-0000-000000000000"
                                },
                                "integration": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "00000000-0000-0000-0000-000000000000"
                                    },
                                    "application": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "name"
                                      ]
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "application",
                                    "name"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "integration",
                                "name"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "resource",
                            "name"
                          ]
                        }
                      }
                    },
                    "required": [
                      "pagination",
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Roles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/roles/{id}": {
        "get": {
          "operationId": "Roles_show",
          "summary": "Get a role by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "resource": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "integration": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "application": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "application",
                                  "name"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "integration",
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "workflow": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "resource",
                          "allowedDurations",
                          "workflow",
                          "allowRequests",
                          "allowAsGrantMethod",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Roles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        },
        "put": {
          "operationId": "Roles_update",
          "summary": "Update a role",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "example": "00000000-0000-0000-0000-000000000000",
              "schema": {
                "format": "uuid",
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "allowedDurations": {
                      "type": "array",
                      "nullable": true,
                      "items": {
                        "type": "number",
                        "enum": [
                          3600,
                          10800,
                          21600,
                          43200,
                          57600,
                          86400,
                          259200,
                          604800,
                          2628000,
                          7884000,
                          15768000,
                          31536000,
                          63072000,
                          -1
                        ]
                      }
                    },
                    "allowRequests": {
                      "type": "boolean"
                    },
                    "allowAsGrantMethod": {
                      "type": "boolean"
                    },
                    "workflow": {
                      "nullable": true,
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid",
                              "example": "00000000-0000-0000-0000-000000000000"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "resource": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "integration": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "application": {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "name"
                                    ]
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "application",
                                  "name"
                                ]
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "integration",
                              "name"
                            ]
                          },
                          "allowedDurations": {
                            "type": "array",
                            "items": {
                              "type": "number",
                              "enum": [
                                3600,
                                10800,
                                21600,
                                43200,
                                57600,
                                86400,
                                259200,
                                604800,
                                2628000,
                                7884000,
                                15768000,
                                31536000,
                                63072000,
                                -1
                              ]
                            }
                          },
                          "workflow": {
                            "nullable": true,
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "format": "uuid",
                                    "example": "00000000-0000-0000-0000-000000000000"
                                  },
                                  "name": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          },
                          "allowRequests": {
                            "type": "boolean"
                          },
                          "allowAsGrantMethod": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "resource",
                          "allowedDurations",
                          "workflow",
                          "allowRequests",
                          "allowAsGrantMethod",
                          "name"
                        ]
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Roles"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/accessRequests/{id}": {
        "get": {
          "operationId": "AccessRequests_show",
          "summary": "Get access request by id",
          "parameters": [
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "The access request's id or number",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "behalfOf": {
                              "description": "The user the access was requested for",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "00000000-0000-0000-0000-000000000000"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "example": "user@org.domain"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              ]
                            },
                            "duration": {
                              "type": "number",
                              "description": "The requested duration in seconds (-1 means forever)"
                            },
                            "id": {
                              "type": "string",
                              "description": "The access request's id"
                            },
                            "justification": {
                              "type": "string",
                              "description": "The justification for the access request"
                            },
                            "number": {
                              "type": "number",
                              "description": "The access request's number"
                            },
                            "roles": {
                              "description": "The access request's roles to receive",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The role's id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The role's name"
                                  },
                                  "isPrerequisite": {
                                    "type": "boolean",
                                    "description": "Was the role added because it is a prerequisite"
                                  },
                                  "resource": {
                                    "description": "The role's resource",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The resource's id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The resource's name"
                                          },
                                          "integration": {
                                            "description": "The resource's integration",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The integration's id"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The integration's name"
                                                  },
                                                  "application": {
                                                    "description": "The integration's application",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "The application's name"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "name",
                                                  "application"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "integration"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "isPrerequisite",
                                  "resource"
                                ]
                              }
                            },
                            "status": {
                              "description": "The access request's status",
                              "type": "string",
                              "enum": [
                                "approved",
                                "cancelled",
                                "failed",
                                "granted",
                                "permissionInProgress",
                                "rejected",
                                "revoked",
                                "waitingForIT",
                                "waitingForApproval"
                              ]
                            },
                            "target": {
                              "description": "The access request's target",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    },
                                    "bundle": {
                                      "description": "The target bundle",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "The bundle's id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The bundle's name"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "bundle"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    },
                                    "role": {
                                      "description": "The target role",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "The role's id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The role's name"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "role"
                                  ]
                                }
                              ],
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              ]
                            },
                            "user": {
                              "description": "The access request's creator",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "00000000-0000-0000-0000-000000000000"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "example": "user@org.domain"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "behalfOf",
                            "duration",
                            "id",
                            "justification",
                            "number",
                            "roles",
                            "status",
                            "target",
                            "user"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Access Requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      },
      "/public/v1/accessRequests": {
        "post": {
          "operationId": "AccessRequests_create",
          "summary": "Create a new access request",
          "parameters": [],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "duration": {
                      "type": "number",
                      "description": "The duration of the access requested"
                    },
                    "justification": {
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 2048,
                      "description": "The justification for the access request"
                    },
                    "target": {
                      "description": "The target of the access request",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The target's type",
                              "type": "string",
                              "enum": [
                                "bundle",
                                "role"
                              ]
                            },
                            "bundle": {
                              "description": "The target's bundle",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The target bundle's id"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "bundle"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "description": "The target's type",
                              "type": "string",
                              "enum": [
                                "bundle",
                                "role"
                              ]
                            },
                            "role": {
                              "description": "The target's role",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The target role's id"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "role"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "duration",
                    "justification",
                    "target"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "result": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "behalfOf": {
                              "description": "The user the access was requested for",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "00000000-0000-0000-0000-000000000000"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "example": "user@org.domain"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              ]
                            },
                            "duration": {
                              "type": "number",
                              "description": "The requested duration in seconds (-1 means forever)"
                            },
                            "id": {
                              "type": "string",
                              "description": "The access request's id"
                            },
                            "justification": {
                              "type": "string",
                              "description": "The justification for the access request"
                            },
                            "number": {
                              "type": "number",
                              "description": "The access request's number"
                            },
                            "roles": {
                              "description": "The access request's roles to receive",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The role's id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The role's name"
                                  },
                                  "isPrerequisite": {
                                    "type": "boolean",
                                    "description": "Was the role added because it is a prerequisite"
                                  },
                                  "resource": {
                                    "description": "The role's resource",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The resource's id"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The resource's name"
                                          },
                                          "integration": {
                                            "description": "The resource's integration",
                                            "allOf": [
                                              {
                                                "type": "object",
                                                "properties": {
                                                  "id": {
                                                    "type": "string",
                                                    "description": "The integration's id"
                                                  },
                                                  "name": {
                                                    "type": "string",
                                                    "description": "The integration's name"
                                                  },
                                                  "application": {
                                                    "description": "The integration's application",
                                                    "allOf": [
                                                      {
                                                        "type": "object",
                                                        "properties": {
                                                          "name": {
                                                            "type": "string",
                                                            "description": "The application's name"
                                                          }
                                                        },
                                                        "required": [
                                                          "name"
                                                        ]
                                                      }
                                                    ]
                                                  }
                                                },
                                                "required": [
                                                  "id",
                                                  "name",
                                                  "application"
                                                ]
                                              }
                                            ]
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "name",
                                          "integration"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "isPrerequisite",
                                  "resource"
                                ]
                              }
                            },
                            "status": {
                              "description": "The access request's status",
                              "type": "string",
                              "enum": [
                                "approved",
                                "cancelled",
                                "failed",
                                "granted",
                                "permissionInProgress",
                                "rejected",
                                "revoked",
                                "waitingForIT",
                                "waitingForApproval"
                              ]
                            },
                            "target": {
                              "description": "The access request's target",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    },
                                    "bundle": {
                                      "description": "The target bundle",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "The bundle's id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The bundle's name"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "bundle"
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    },
                                    "role": {
                                      "description": "The target role",
                                      "allOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "The role's id"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The role's name"
                                            }
                                          },
                                          "required": [
                                            "id",
                                            "name"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type",
                                    "role"
                                  ]
                                }
                              ],
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "description": "The target's type",
                                      "type": "string",
                                      "enum": [
                                        "bundle",
                                        "role"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "type"
                                  ]
                                }
                              ]
                            },
                            "user": {
                              "description": "The access request's creator",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid",
                                      "example": "00000000-0000-0000-0000-000000000000"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email",
                                      "example": "user@org.domain"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "behalfOf",
                            "duration",
                            "id",
                            "justification",
                            "number",
                            "roles",
                            "status",
                            "target",
                            "user"
                          ]
                        }
                      }
                    },
                    "required": [
                      "result"
                    ]
                  }
                }
              }
            }
          },
          "tags": [
            "Access Requests"
          ],
          "security": [
            {
              "bearer": []
            }
          ]
        }
      }
    },
    "info": {
      "title": "Entitle API",
      "description": "Entitle API documentation",
      "version": "1.0",
      "contact": {}
    },
    "tags": [],
    "servers": [
      {
        "url": "https://api.entitle.io"
      }
    ],
    "components": {
      "securitySchemes": {
        "bearer": {
          "scheme": "bearer",
          "bearerFormat": "JWT",
          "type": "http"
        }
      },
      "schemas": {
        "EnumAuditLogEventType": {
          "type": "array",
          "enum": [
            "accessReview.created",
            "accessReview.deleted",
            "accessReview.updated",
            "accessReview.activated",
            "approvalAlgorithm.created",
            "approvalAlgorithm.deleted",
            "approvalAlgorithm.updated",
            "bundle.created",
            "bundle.deleted",
            "bundle.updated",
            "company.failed.sync.directories.groups",
            "company.failed.sync.directories.users",
            "company.failed.sync.hr.directManagers",
            "company.policy.permissions.updated",
            "company.policy.user.missingActors",
            "company.sync.directories.groups",
            "company.sync.directories.users",
            "company.sync.hr.directManagers",
            "integration.failed.access.give",
            "integration.failed.access.revoke",
            "integration.failed.sync.actors",
            "integration.failed.sync.assets",
            "integration.failed.sync.permissions",
            "integration.sync.actors",
            "integration.sync.assets",
            "integration.sync.permissions",
            "integration.updated.allowAsGrantMethod",
            "integration.updated.allowedDurations",
            "integration.updated.allowsRequests",
            "integration.updated.approvalAlgorithm",
            "integration.updated.autoAssignRecommendedResourceMaintainers",
            "integration.updated.autoAssignRecommendedResourceOwner",
            "integration.updated.canCreateActors",
            "integration.updated.canEditPermissions",
            "integration.updated.configuration",
            "integration.updated.defaultAllowAsGrantMethod",
            "integration.updated.defaultAllowsRequests",
            "integration.updated.image",
            "integration.updated.maintainers",
            "integration.updated.name",
            "integration.updated.notifyAboutExternalPermissions",
            "integration.updated.owner",
            "integration.updated.readonly",
            "integration.created",
            "integration.deleted",
            "integrationResource.created.manually",
            "integrationResource.deleted.manually",
            "integrationResource.updated.allowAsGrantMethod",
            "integrationResource.updated.allowedDurations",
            "integrationResource.updated.allowsRequests",
            "integrationResource.updated.approvalAlgorithm",
            "integrationResource.updated.displayName",
            "integrationResource.updated.maintainers",
            "integrationResource.updated.owner",
            "integrationResource.updated.userDefinedDescription",
            "integrationResource.updated.userDefinedTags",
            "integrationResourceRole.created.manually",
            "integrationResourceRole.deleted.manually",
            "integrationResourceRole.updated.allowAsGrantMethod",
            "integrationResourceRole.updated.allowedDurations",
            "integrationResourceRole.updated.allowsRequests",
            "integrationResourceRole.updated.approvalAlgorithm",
            "integrationResourceRole.updated.name",
            "policy.updated.data",
            "policy.updated.sortOrder",
            "policy.created",
            "policy.deleted",
            "ticket.failed.grant",
            "ticket.failed.revoke",
            "ticket.redirect.emptyGroup",
            "ticket.redirect.forward",
            "ticket.redirect.noManagers",
            "ticket.redirect.noTeamMembers",
            "ticket.redirect.toUser",
            "ticket.retry.grant",
            "ticket.retry.revoke",
            "ticket.sent.grant",
            "ticket.sent.revert",
            "ticket.sent.revoke",
            "ticket.automaticApproval",
            "ticket.created",
            "ticket.deleted",
            "ticket.finalApproved",
            "ticket.granted",
            "ticket.passedStage",
            "ticket.permissionAlreadyExist",
            "ticket.permissionReverted",
            "ticket.permissionWontRevoke",
            "ticket.revoked",
            "ticket.statusChanged",
            "ticket.taskCreated",
            "ticket.userApproved",
            "ticket.userDeclined"
          ]
        },
        "AuditLogsBodySchema": {
          "type": "object",
          "properties": {
            "minDate": {
              "type": "string",
              "example": "2021-01-21",
              "format": "date"
            },
            "maxDate": {
              "type": "string",
              "example": "2021-01-21",
              "format": "date"
            },
            "type": {
              "type": "array",
              "description": "Audit log types to search",
              "items": {
                "type": "array",
                "enum": [
                  "accessReview.created",
                  "accessReview.deleted",
                  "accessReview.updated",
                  "accessReview.activated",
                  "approvalAlgorithm.created",
                  "approvalAlgorithm.deleted",
                  "approvalAlgorithm.updated",
                  "bundle.created",
                  "bundle.deleted",
                  "bundle.updated",
                  "company.failed.sync.directories.groups",
                  "company.failed.sync.directories.users",
                  "company.failed.sync.hr.directManagers",
                  "company.policy.permissions.updated",
                  "company.policy.user.missingActors",
                  "company.sync.directories.groups",
                  "company.sync.directories.users",
                  "company.sync.hr.directManagers",
                  "integration.failed.access.give",
                  "integration.failed.access.revoke",
                  "integration.failed.sync.actors",
                  "integration.failed.sync.assets",
                  "integration.failed.sync.permissions",
                  "integration.sync.actors",
                  "integration.sync.assets",
                  "integration.sync.permissions",
                  "integration.updated.allowAsGrantMethod",
                  "integration.updated.allowedDurations",
                  "integration.updated.allowsRequests",
                  "integration.updated.approvalAlgorithm",
                  "integration.updated.autoAssignRecommendedResourceMaintainers",
                  "integration.updated.autoAssignRecommendedResourceOwner",
                  "integration.updated.canCreateActors",
                  "integration.updated.canEditPermissions",
                  "integration.updated.configuration",
                  "integration.updated.defaultAllowAsGrantMethod",
                  "integration.updated.defaultAllowsRequests",
                  "integration.updated.image",
                  "integration.updated.maintainers",
                  "integration.updated.name",
                  "integration.updated.notifyAboutExternalPermissions",
                  "integration.updated.owner",
                  "integration.updated.readonly",
                  "integration.created",
                  "integration.deleted",
                  "integrationResource.created.manually",
                  "integrationResource.deleted.manually",
                  "integrationResource.updated.allowAsGrantMethod",
                  "integrationResource.updated.allowedDurations",
                  "integrationResource.updated.allowsRequests",
                  "integrationResource.updated.approvalAlgorithm",
                  "integrationResource.updated.displayName",
                  "integrationResource.updated.maintainers",
                  "integrationResource.updated.owner",
                  "integrationResource.updated.userDefinedDescription",
                  "integrationResource.updated.userDefinedTags",
                  "integrationResourceRole.created.manually",
                  "integrationResourceRole.deleted.manually",
                  "integrationResourceRole.updated.allowAsGrantMethod",
                  "integrationResourceRole.updated.allowedDurations",
                  "integrationResourceRole.updated.allowsRequests",
                  "integrationResourceRole.updated.approvalAlgorithm",
                  "integrationResourceRole.updated.name",
                  "policy.updated.data",
                  "policy.updated.sortOrder",
                  "policy.created",
                  "policy.deleted",
                  "ticket.failed.grant",
                  "ticket.failed.revoke",
                  "ticket.redirect.emptyGroup",
                  "ticket.redirect.forward",
                  "ticket.redirect.noManagers",
                  "ticket.redirect.noTeamMembers",
                  "ticket.redirect.toUser",
                  "ticket.retry.grant",
                  "ticket.retry.revoke",
                  "ticket.sent.grant",
                  "ticket.sent.revert",
                  "ticket.sent.revoke",
                  "ticket.automaticApproval",
                  "ticket.created",
                  "ticket.deleted",
                  "ticket.finalApproved",
                  "ticket.granted",
                  "ticket.passedStage",
                  "ticket.permissionAlreadyExist",
                  "ticket.permissionReverted",
                  "ticket.permissionWontRevoke",
                  "ticket.revoked",
                  "ticket.statusChanged",
                  "ticket.taskCreated",
                  "ticket.userApproved",
                  "ticket.userDeclined"
                ]
              }
            }
          },
          "required": [
            "minDate"
          ]
        },
        "AuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "accessReview": {
                        "type": "string",
                        "example": "Access review 123",
                        "description": "Name of the access review"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "approvalAlgorithm": {
                        "type": "string",
                        "example": "Approval algorithm 123",
                        "description": "Name of the approval algorithm"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "bundle": {
                        "type": "string",
                        "example": "Bundle 123",
                        "description": "Name of the bundle"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "integration": {
                        "type": "string",
                        "example": "Integration 123",
                        "description": "Name of the integration"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "integrationResource": {
                        "type": "string",
                        "example": "Resource 123",
                        "description": "Name of the resource"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "integrationResourceRole": {
                        "type": "string",
                        "example": "Role 123",
                        "description": "Name of the role"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "policy": {
                        "type": "number",
                        "example": "1",
                        "description": "Number of the policy"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "createdAt": {
                        "format": "date-time",
                        "type": "string",
                        "example": "2021-01-21T00:00:00.000Z",
                        "description": "Date of the audit log"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "accessReview.created",
                          "accessReview.deleted",
                          "accessReview.updated",
                          "accessReview.activated",
                          "approvalAlgorithm.created",
                          "approvalAlgorithm.deleted",
                          "approvalAlgorithm.updated",
                          "bundle.created",
                          "bundle.deleted",
                          "bundle.updated",
                          "company.failed.sync.directories.groups",
                          "company.failed.sync.directories.users",
                          "company.failed.sync.hr.directManagers",
                          "company.policy.permissions.updated",
                          "company.policy.user.missingActors",
                          "company.sync.directories.groups",
                          "company.sync.directories.users",
                          "company.sync.hr.directManagers",
                          "integration.failed.access.give",
                          "integration.failed.access.revoke",
                          "integration.failed.sync.actors",
                          "integration.failed.sync.assets",
                          "integration.failed.sync.permissions",
                          "integration.sync.actors",
                          "integration.sync.assets",
                          "integration.sync.permissions",
                          "integration.updated.allowAsGrantMethod",
                          "integration.updated.allowedDurations",
                          "integration.updated.allowsRequests",
                          "integration.updated.approvalAlgorithm",
                          "integration.updated.autoAssignRecommendedResourceMaintainers",
                          "integration.updated.autoAssignRecommendedResourceOwner",
                          "integration.updated.canCreateActors",
                          "integration.updated.canEditPermissions",
                          "integration.updated.configuration",
                          "integration.updated.defaultAllowAsGrantMethod",
                          "integration.updated.defaultAllowsRequests",
                          "integration.updated.image",
                          "integration.updated.maintainers",
                          "integration.updated.name",
                          "integration.updated.notifyAboutExternalPermissions",
                          "integration.updated.owner",
                          "integration.updated.readonly",
                          "integration.created",
                          "integration.deleted",
                          "integrationResource.created.manually",
                          "integrationResource.deleted.manually",
                          "integrationResource.updated.allowAsGrantMethod",
                          "integrationResource.updated.allowedDurations",
                          "integrationResource.updated.allowsRequests",
                          "integrationResource.updated.approvalAlgorithm",
                          "integrationResource.updated.displayName",
                          "integrationResource.updated.maintainers",
                          "integrationResource.updated.owner",
                          "integrationResource.updated.userDefinedDescription",
                          "integrationResource.updated.userDefinedTags",
                          "integrationResourceRole.created.manually",
                          "integrationResourceRole.deleted.manually",
                          "integrationResourceRole.updated.allowAsGrantMethod",
                          "integrationResourceRole.updated.allowedDurations",
                          "integrationResourceRole.updated.allowsRequests",
                          "integrationResourceRole.updated.approvalAlgorithm",
                          "integrationResourceRole.updated.name",
                          "policy.updated.data",
                          "policy.updated.sortOrder",
                          "policy.created",
                          "policy.deleted",
                          "ticket.failed.grant",
                          "ticket.failed.revoke",
                          "ticket.redirect.emptyGroup",
                          "ticket.redirect.forward",
                          "ticket.redirect.noManagers",
                          "ticket.redirect.noTeamMembers",
                          "ticket.redirect.toUser",
                          "ticket.retry.grant",
                          "ticket.retry.revoke",
                          "ticket.sent.grant",
                          "ticket.sent.revert",
                          "ticket.sent.revoke",
                          "ticket.automaticApproval",
                          "ticket.created",
                          "ticket.deleted",
                          "ticket.finalApproved",
                          "ticket.granted",
                          "ticket.passedStage",
                          "ticket.permissionAlreadyExist",
                          "ticket.permissionReverted",
                          "ticket.permissionWontRevoke",
                          "ticket.revoked",
                          "ticket.statusChanged",
                          "ticket.taskCreated",
                          "ticket.userApproved",
                          "ticket.userDeclined"
                        ],
                        "example": "approvalAlgorithm.deleted",
                        "description": "Type of the audit log"
                      },
                      "user": {
                        "type": "string",
                        "example": "user@org.domain",
                        "description": "User who performed the action"
                      },
                      "ticket": {
                        "type": "number",
                        "example": "Ticket 123",
                        "description": "Number of the ticket"
                      }
                    },
                    "required": [
                      "createdAt",
                      "type"
                    ]
                  }
                ]
              }
            }
          },
          "required": [
            "result"
          ]
        },
        "PaginationResponseSchema": {
          "type": "object",
          "properties": {
            "page": {
              "type": "number",
              "minimum": 1,
              "description": "Current page"
            },
            "perPage": {
              "type": "number",
              "minimum": 1,
              "maximum": 100,
              "description": "Number of results per page"
            },
            "totalResults": {
              "type": "number",
              "minimum": 0,
              "description": "Total number of results"
            },
            "totalPages": {
              "type": "number",
              "minimum": 0,
              "description": "Total number of pages"
            }
          },
          "required": [
            "page",
            "perPage",
            "totalResults",
            "totalPages"
          ]
        },
        "UserSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Entity name"
            },
            "email": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User's email"
            }
          },
          "required": [
            "name",
            "email"
          ]
        },
        "ActorSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Actor's display name"
            },
            "users": {
              "description": "Users associated with the actor",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Entity name"
                  },
                  "email": {
                    "type": "string",
                    "example": "user@org.domain",
                    "description": "User's email"
                  }
                },
                "required": [
                  "name",
                  "email"
                ]
              }
            }
          },
          "required": [
            "name",
            "users"
          ]
        },
        "EntitySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Entity name"
            }
          },
          "required": [
            "name"
          ]
        },
        "PermissionSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the permission creation"
            },
            "deprecatedAt": {
              "format": "date-time",
              "type": "string",
              "nullable": true,
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the permission deprecation"
            },
            "actor": {
              "description": "Permission's actor",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Actor's display name"
                    },
                    "users": {
                      "description": "Users associated with the actor",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Entity name"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@org.domain",
                            "description": "User's email"
                          }
                        },
                        "required": [
                          "name",
                          "email"
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "users"
                  ]
                }
              ]
            },
            "integration": {
              "description": "Permission's integration",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Entity name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            },
            "resource": {
              "description": "Permission's resource",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Entity name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            },
            "role": {
              "description": "Permission's role",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Entity name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          },
          "required": [
            "createdAt",
            "actor",
            "integration",
            "resource",
            "role"
          ]
        },
        "PermissionResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "createdAt": {
                    "format": "date-time",
                    "type": "string",
                    "example": "2021-01-21T00:00:00.000Z",
                    "description": "Date of the permission creation"
                  },
                  "deprecatedAt": {
                    "format": "date-time",
                    "type": "string",
                    "nullable": true,
                    "example": "2021-01-21T00:00:00.000Z",
                    "description": "Date of the permission deprecation"
                  },
                  "actor": {
                    "description": "Permission's actor",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Actor's display name"
                          },
                          "users": {
                            "description": "Users associated with the actor",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Entity name"
                                },
                                "email": {
                                  "type": "string",
                                  "example": "user@org.domain",
                                  "description": "User's email"
                                }
                              },
                              "required": [
                                "name",
                                "email"
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "users"
                        ]
                      }
                    ]
                  },
                  "integration": {
                    "description": "Permission's integration",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Entity name"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  },
                  "resource": {
                    "description": "Permission's resource",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Entity name"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  },
                  "role": {
                    "description": "Permission's role",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Entity name"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "createdAt",
                  "actor",
                  "integration",
                  "resource",
                  "role"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "WorkflowIndexResultResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "id": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": [
            "name",
            "id"
          ]
        },
        "WorkflowIndexResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "name",
                  "id"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "WorkflowGroupResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "id": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": [
            "name",
            "id"
          ]
        },
        "EnumAllowedDurations": {
          "type": "number",
          "enum": [
            3600,
            10800,
            21600,
            43200,
            57600,
            86400,
            259200,
            604800,
            2628000,
            7884000,
            15768000,
            31536000,
            63072000,
            -1
          ]
        },
        "EnumApprovalFlowStepOperator": {
          "type": "string",
          "enum": [
            "and",
            "or"
          ]
        },
        "ApprovalFlowStepResponseSchema": {
          "type": "object",
          "properties": {
            "operator": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "approvalEntities": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectoryGroup"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "name",
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OnCallIntegrationSchedule"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "name",
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "User"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Automatic",
                          "DirectManager",
                          "IntegrationMaintainer",
                          "IntegrationOwner",
                          "ResourceMaintainer",
                          "ResourceOwner",
                          "TeamMember"
                        ]
                      },
                      "entity": {
                        "type": "null",
                        "nullable": true,
                        "example": null
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  }
                ]
              }
            },
            "notifiedEntities": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectoryGroup"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "name",
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OnCallIntegrationSchedule"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "minLength": 2,
                            "maxLength": 50
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "name",
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "User"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectManager",
                          "IntegrationMaintainer",
                          "IntegrationOwner",
                          "ResourceMaintainer",
                          "ResourceOwner",
                          "TeamMember"
                        ]
                      },
                      "entity": {
                        "type": "null",
                        "nullable": true,
                        "example": null
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  }
                ]
              }
            },
            "sortOrder": {
              "type": "number"
            }
          },
          "required": [
            "operator",
            "approvalEntities",
            "notifiedEntities",
            "sortOrder"
          ]
        },
        "WorkflowApprovalFlowResponseSchema": {
          "type": "object",
          "properties": {
            "steps": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "operator": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or"
                    ]
                  },
                  "approvalEntities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectoryGroup"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 50
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": [
                                "name",
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "OnCallIntegrationSchedule"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 50
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": [
                                "name",
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "User"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email"
                                }
                              },
                              "required": [
                                "id",
                                "email"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Automatic",
                                "DirectManager",
                                "IntegrationMaintainer",
                                "IntegrationOwner",
                                "ResourceMaintainer",
                                "ResourceOwner",
                                "TeamMember"
                              ]
                            },
                            "entity": {
                              "type": "null",
                              "nullable": true,
                              "example": null
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        }
                      ]
                    }
                  },
                  "notifiedEntities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectoryGroup"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 50
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": [
                                "name",
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "OnCallIntegrationSchedule"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "minLength": 2,
                                  "maxLength": 50
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                }
                              },
                              "required": [
                                "name",
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "User"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "email": {
                                  "type": "string",
                                  "format": "email"
                                }
                              },
                              "required": [
                                "id",
                                "email"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectManager",
                                "IntegrationMaintainer",
                                "IntegrationOwner",
                                "ResourceMaintainer",
                                "ResourceOwner",
                                "TeamMember"
                              ]
                            },
                            "entity": {
                              "type": "null",
                              "nullable": true,
                              "example": null
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        }
                      ]
                    }
                  },
                  "sortOrder": {
                    "type": "number"
                  }
                },
                "required": [
                  "operator",
                  "approvalEntities",
                  "notifiedEntities",
                  "sortOrder"
                ]
              }
            }
          },
          "required": [
            "steps"
          ]
        },
        "WorkflowRuleResponseSchema": {
          "type": "object",
          "properties": {
            "inGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "name",
                  "id"
                ]
              }
            },
            "inSchedules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "name",
                  "id"
                ]
              }
            },
            "underDuration": {
              "nullable": true,
              "type": "number",
              "enum": [
                3600,
                10800,
                21600,
                43200,
                57600,
                86400,
                259200,
                604800,
                2628000,
                7884000,
                15768000,
                31536000,
                63072000,
                -1
              ]
            },
            "approvalFlow": {
              "type": "object",
              "properties": {
                "steps": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "operator": {
                        "type": "string",
                        "enum": [
                          "and",
                          "or"
                        ]
                      },
                      "approvalEntities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectoryGroup"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 50
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "OnCallIntegrationSchedule"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 50
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "User"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Automatic",
                                    "DirectManager",
                                    "IntegrationMaintainer",
                                    "IntegrationOwner",
                                    "ResourceMaintainer",
                                    "ResourceOwner",
                                    "TeamMember"
                                  ]
                                },
                                "entity": {
                                  "type": "null",
                                  "nullable": true,
                                  "example": null
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            }
                          ]
                        }
                      },
                      "notifiedEntities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectoryGroup"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 50
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "OnCallIntegrationSchedule"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "minLength": 2,
                                      "maxLength": 50
                                    },
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "User"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "format": "uuid"
                                    },
                                    "email": {
                                      "type": "string",
                                      "format": "email"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "email"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectManager",
                                    "IntegrationMaintainer",
                                    "IntegrationOwner",
                                    "ResourceMaintainer",
                                    "ResourceOwner",
                                    "TeamMember"
                                  ]
                                },
                                "entity": {
                                  "type": "null",
                                  "nullable": true,
                                  "example": null
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            }
                          ]
                        }
                      },
                      "sortOrder": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "operator",
                      "approvalEntities",
                      "notifiedEntities",
                      "sortOrder"
                    ]
                  }
                }
              },
              "required": [
                "steps"
              ]
            },
            "sortOrder": {
              "type": "number"
            },
            "anySchedule": {
              "type": "boolean"
            }
          },
          "required": [
            "inGroups",
            "inSchedules",
            "underDuration",
            "approvalFlow",
            "sortOrder",
            "anySchedule"
          ]
        },
        "FullWorkflowResultResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "rules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "name",
                        "id"
                      ]
                    }
                  },
                  "inSchedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "minLength": 2,
                          "maxLength": 50
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      "required": [
                        "name",
                        "id"
                      ]
                    }
                  },
                  "underDuration": {
                    "nullable": true,
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  },
                  "approvalFlow": {
                    "type": "object",
                    "properties": {
                      "steps": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "operator": {
                              "type": "string",
                              "enum": [
                                "and",
                                "or"
                              ]
                            },
                            "approvalEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "minLength": 2,
                                            "maxLength": 50
                                          },
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "minLength": 2,
                                            "maxLength": 50
                                          },
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "email"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Automatic",
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "nullable": true,
                                        "example": null
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "notifiedEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "minLength": 2,
                                            "maxLength": 50
                                          },
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "minLength": 2,
                                            "maxLength": 50
                                          },
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          }
                                        },
                                        "required": [
                                          "name",
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "format": "uuid"
                                          },
                                          "email": {
                                            "type": "string",
                                            "format": "email"
                                          }
                                        },
                                        "required": [
                                          "id",
                                          "email"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "nullable": true,
                                        "example": null
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "operator",
                            "approvalEntities",
                            "notifiedEntities",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "steps"
                    ]
                  },
                  "sortOrder": {
                    "type": "number"
                  },
                  "anySchedule": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "inGroups",
                  "inSchedules",
                  "underDuration",
                  "approvalFlow",
                  "sortOrder",
                  "anySchedule"
                ]
              }
            }
          },
          "required": [
            "name",
            "id",
            "rules"
          ]
        },
        "FullWorkflowResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "rules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "inGroups": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 50
                              },
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "required": [
                              "name",
                              "id"
                            ]
                          }
                        },
                        "inSchedules": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 2,
                                "maxLength": 50
                              },
                              "id": {
                                "type": "string",
                                "format": "uuid"
                              }
                            },
                            "required": [
                              "name",
                              "id"
                            ]
                          }
                        },
                        "underDuration": {
                          "nullable": true,
                          "type": "number",
                          "enum": [
                            3600,
                            10800,
                            21600,
                            43200,
                            57600,
                            86400,
                            259200,
                            604800,
                            2628000,
                            7884000,
                            15768000,
                            31536000,
                            63072000,
                            -1
                          ]
                        },
                        "approvalFlow": {
                          "type": "object",
                          "properties": {
                            "steps": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "operator": {
                                    "type": "string",
                                    "enum": [
                                      "and",
                                      "or"
                                    ]
                                  },
                                  "approvalEntities": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DirectoryGroup"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "minLength": 2,
                                                  "maxLength": 50
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "id"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "OnCallIntegrationSchedule"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "minLength": 2,
                                                  "maxLength": 50
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "id"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "User"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "format": "email"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "email"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "Automatic",
                                                "DirectManager",
                                                "IntegrationMaintainer",
                                                "IntegrationOwner",
                                                "ResourceMaintainer",
                                                "ResourceOwner",
                                                "TeamMember"
                                              ]
                                            },
                                            "entity": {
                                              "type": "null",
                                              "nullable": true,
                                              "example": null
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "notifiedEntities": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "oneOf": [
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DirectoryGroup"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "minLength": 2,
                                                  "maxLength": 50
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "id"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "OnCallIntegrationSchedule"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "minLength": 2,
                                                  "maxLength": 50
                                                },
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                }
                                              },
                                              "required": [
                                                "name",
                                                "id"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "User"
                                              ]
                                            },
                                            "entity": {
                                              "type": "object",
                                              "properties": {
                                                "id": {
                                                  "type": "string",
                                                  "format": "uuid"
                                                },
                                                "email": {
                                                  "type": "string",
                                                  "format": "email"
                                                }
                                              },
                                              "required": [
                                                "id",
                                                "email"
                                              ]
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        },
                                        {
                                          "type": "object",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "enum": [
                                                "DirectManager",
                                                "IntegrationMaintainer",
                                                "IntegrationOwner",
                                                "ResourceMaintainer",
                                                "ResourceOwner",
                                                "TeamMember"
                                              ]
                                            },
                                            "entity": {
                                              "type": "null",
                                              "nullable": true,
                                              "example": null
                                            }
                                          },
                                          "required": [
                                            "type",
                                            "entity"
                                          ]
                                        }
                                      ]
                                    }
                                  },
                                  "sortOrder": {
                                    "type": "number"
                                  }
                                },
                                "required": [
                                  "operator",
                                  "approvalEntities",
                                  "notifiedEntities",
                                  "sortOrder"
                                ]
                              }
                            }
                          },
                          "required": [
                            "steps"
                          ]
                        },
                        "sortOrder": {
                          "type": "number"
                        },
                        "anySchedule": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "inGroups",
                        "inSchedules",
                        "underDuration",
                        "approvalFlow",
                        "sortOrder",
                        "anySchedule"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "id",
                  "rules"
                ]
              }
            }
          },
          "required": [
            "result"
          ]
        },
        "GroupEntitySchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": [
                "00000000-0000-0000-0000-000000000000",
                "user@org.domain",
                "uniq-identifier"
              ],
              "description": "A unique identifier/email of the group"
            }
          },
          "required": [
            "id"
          ]
        },
        "ScheduleEntitySchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": [
                "00000000-0000-0000-0000-000000000000",
                "uniq-identifier"
              ],
              "description": "A unique identifier of the schedule"
            }
          },
          "required": [
            "id"
          ]
        },
        "EnumApprovalFlowOperator": {
          "type": "string",
          "enum": [
            "and",
            "or"
          ]
        },
        "ApprovalFlowSchema": {
          "type": "object",
          "properties": {
            "operator": {
              "type": "string",
              "enum": [
                "and",
                "or"
              ]
            },
            "approvalEntities": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectoryGroup"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "user@org.domain",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier/email of the group"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OnCallIntegrationSchedule"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier of the schedule"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "User"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "user@org.domain",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier/email of the user"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "Automatic",
                          "DirectManager",
                          "IntegrationMaintainer",
                          "IntegrationOwner",
                          "ResourceMaintainer",
                          "ResourceOwner",
                          "TeamMember"
                        ]
                      },
                      "entity": {
                        "type": "null",
                        "example": null,
                        "nullable": true
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  }
                ]
              }
            },
            "notifiedEntities": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectoryGroup"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "user@org.domain",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier/email of the group"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "OnCallIntegrationSchedule"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier of the schedule"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "User"
                        ]
                      },
                      "entity": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": [
                              "00000000-0000-0000-0000-000000000000",
                              "user@org.domain",
                              "uniq-identifier"
                            ],
                            "description": "A unique identifier/email of the user"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "DirectManager",
                          "IntegrationMaintainer",
                          "IntegrationOwner",
                          "ResourceMaintainer",
                          "ResourceOwner",
                          "TeamMember"
                        ]
                      },
                      "entity": {
                        "type": "null",
                        "example": null,
                        "nullable": true
                      }
                    },
                    "required": [
                      "type",
                      "entity"
                    ]
                  }
                ]
              }
            },
            "sortOrder": {
              "type": "number"
            }
          },
          "required": [
            "operator",
            "approvalEntities",
            "notifiedEntities",
            "sortOrder"
          ]
        },
        "WorkflowApprovalFlowSchema": {
          "type": "object",
          "properties": {
            "steps": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "operator": {
                    "type": "string",
                    "enum": [
                      "and",
                      "or"
                    ]
                  },
                  "approvalEntities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectoryGroup"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the group"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "OnCallIntegrationSchedule"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier of the schedule"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "User"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the user"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "Automatic",
                                "DirectManager",
                                "IntegrationMaintainer",
                                "IntegrationOwner",
                                "ResourceMaintainer",
                                "ResourceOwner",
                                "TeamMember"
                              ]
                            },
                            "entity": {
                              "type": "null",
                              "example": null,
                              "nullable": true
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        }
                      ]
                    }
                  },
                  "notifiedEntities": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectoryGroup"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the group"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "OnCallIntegrationSchedule"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier of the schedule"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "User"
                              ]
                            },
                            "entity": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "example": [
                                    "00000000-0000-0000-0000-000000000000",
                                    "user@org.domain",
                                    "uniq-identifier"
                                  ],
                                  "description": "A unique identifier/email of the user"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "DirectManager",
                                "IntegrationMaintainer",
                                "IntegrationOwner",
                                "ResourceMaintainer",
                                "ResourceOwner",
                                "TeamMember"
                              ]
                            },
                            "entity": {
                              "type": "null",
                              "example": null,
                              "nullable": true
                            }
                          },
                          "required": [
                            "type",
                            "entity"
                          ]
                        }
                      ]
                    }
                  },
                  "sortOrder": {
                    "type": "number"
                  }
                },
                "required": [
                  "operator",
                  "approvalEntities",
                  "notifiedEntities",
                  "sortOrder"
                ]
              }
            }
          },
          "required": [
            "steps"
          ]
        },
        "WorkflowRuleSchema": {
          "type": "object",
          "properties": {
            "inGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": [
                      "00000000-0000-0000-0000-000000000000",
                      "user@org.domain",
                      "uniq-identifier"
                    ],
                    "description": "A unique identifier/email of the group"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "inSchedules": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": [
                      "00000000-0000-0000-0000-000000000000",
                      "uniq-identifier"
                    ],
                    "description": "A unique identifier of the schedule"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "underDuration": {
              "nullable": true,
              "type": "number",
              "enum": [
                3600,
                10800,
                21600,
                43200,
                57600,
                86400,
                259200,
                604800,
                2628000,
                7884000,
                15768000,
                31536000,
                63072000,
                -1
              ]
            },
            "approvalFlow": {
              "type": "object",
              "properties": {
                "steps": {
                  "minItems": 1,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "operator": {
                        "type": "string",
                        "enum": [
                          "and",
                          "or"
                        ]
                      },
                      "approvalEntities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectoryGroup"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "user@org.domain",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier/email of the group"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "OnCallIntegrationSchedule"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier of the schedule"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "User"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "user@org.domain",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier/email of the user"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "Automatic",
                                    "DirectManager",
                                    "IntegrationMaintainer",
                                    "IntegrationOwner",
                                    "ResourceMaintainer",
                                    "ResourceOwner",
                                    "TeamMember"
                                  ]
                                },
                                "entity": {
                                  "type": "null",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            }
                          ]
                        }
                      },
                      "notifiedEntities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectoryGroup"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "user@org.domain",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier/email of the group"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "OnCallIntegrationSchedule"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier of the schedule"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "User"
                                  ]
                                },
                                "entity": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": [
                                        "00000000-0000-0000-0000-000000000000",
                                        "user@org.domain",
                                        "uniq-identifier"
                                      ],
                                      "description": "A unique identifier/email of the user"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ]
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DirectManager",
                                    "IntegrationMaintainer",
                                    "IntegrationOwner",
                                    "ResourceMaintainer",
                                    "ResourceOwner",
                                    "TeamMember"
                                  ]
                                },
                                "entity": {
                                  "type": "null",
                                  "example": null,
                                  "nullable": true
                                }
                              },
                              "required": [
                                "type",
                                "entity"
                              ]
                            }
                          ]
                        }
                      },
                      "sortOrder": {
                        "type": "number"
                      }
                    },
                    "required": [
                      "operator",
                      "approvalEntities",
                      "notifiedEntities",
                      "sortOrder"
                    ]
                  }
                }
              },
              "required": [
                "steps"
              ]
            },
            "sortOrder": {
              "type": "number"
            },
            "anySchedule": {
              "type": "boolean"
            }
          },
          "required": [
            "inGroups",
            "inSchedules",
            "underDuration",
            "approvalFlow",
            "sortOrder",
            "anySchedule"
          ]
        },
        "WorkflowCreateBodySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "rules": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "user@org.domain",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier/email of the group"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "inSchedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier of the schedule"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "underDuration": {
                    "nullable": true,
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  },
                  "approvalFlow": {
                    "type": "object",
                    "properties": {
                      "steps": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "operator": {
                              "type": "string",
                              "enum": [
                                "and",
                                "or"
                              ]
                            },
                            "approvalEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the group"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier of the schedule"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the user"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Automatic",
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "example": null,
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "notifiedEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the group"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier of the schedule"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the user"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "example": null,
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "operator",
                            "approvalEntities",
                            "notifiedEntities",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "steps"
                    ]
                  },
                  "sortOrder": {
                    "type": "number"
                  },
                  "anySchedule": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "inGroups",
                  "inSchedules",
                  "underDuration",
                  "approvalFlow",
                  "sortOrder",
                  "anySchedule"
                ]
              }
            }
          },
          "required": [
            "name",
            "rules"
          ]
        },
        "WorkflowUpdatedBodySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "rules": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "inGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "user@org.domain",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier/email of the group"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "inSchedules": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "example": [
                            "00000000-0000-0000-0000-000000000000",
                            "uniq-identifier"
                          ],
                          "description": "A unique identifier of the schedule"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  },
                  "underDuration": {
                    "nullable": true,
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  },
                  "approvalFlow": {
                    "type": "object",
                    "properties": {
                      "steps": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "operator": {
                              "type": "string",
                              "enum": [
                                "and",
                                "or"
                              ]
                            },
                            "approvalEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the group"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier of the schedule"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the user"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "Automatic",
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "example": null,
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "notifiedEntities": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectoryGroup"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the group"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "OnCallIntegrationSchedule"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier of the schedule"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "User"
                                        ]
                                      },
                                      "entity": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "example": [
                                              "00000000-0000-0000-0000-000000000000",
                                              "user@org.domain",
                                              "uniq-identifier"
                                            ],
                                            "description": "A unique identifier/email of the user"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "DirectManager",
                                          "IntegrationMaintainer",
                                          "IntegrationOwner",
                                          "ResourceMaintainer",
                                          "ResourceOwner",
                                          "TeamMember"
                                        ]
                                      },
                                      "entity": {
                                        "type": "null",
                                        "example": null,
                                        "nullable": true
                                      }
                                    },
                                    "required": [
                                      "type",
                                      "entity"
                                    ]
                                  }
                                ]
                              }
                            },
                            "sortOrder": {
                              "type": "number"
                            }
                          },
                          "required": [
                            "operator",
                            "approvalEntities",
                            "notifiedEntities",
                            "sortOrder"
                          ]
                        }
                      }
                    },
                    "required": [
                      "steps"
                    ]
                  },
                  "sortOrder": {
                    "type": "number"
                  },
                  "anySchedule": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "inGroups",
                  "inSchedules",
                  "underDuration",
                  "approvalFlow",
                  "sortOrder",
                  "anySchedule"
                ]
              }
            }
          }
        },
        "WorkflowDestroyResponseSchema": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "boolean"
            }
          },
          "required": [
            "ok"
          ]
        },
        "BundleIndexResultResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "BundlesIndexResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "ApplicationResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "IntegrationBaseResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "application": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "application",
            "name"
          ]
        },
        "ResourceResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "integration": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "application": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "application",
                "name"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "integration",
            "name"
          ]
        },
        "BundleItemResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "resource": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "application": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "application",
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "integration",
                "name"
              ]
            }
          },
          "required": [
            "id",
            "name",
            "resource"
          ]
        },
        "WorkflowResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "FullBundleResultResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "allowedDurations": {
              "nullable": true,
              "type": "number",
              "enum": [
                3600,
                10800,
                21600,
                43200,
                57600,
                86400,
                259200,
                604800,
                2628000,
                7884000,
                15768000,
                31536000,
                63072000,
                -1
              ]
            },
            "category": {
              "type": "string",
              "nullable": true
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "tags": {
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "integration": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "application",
                          "name"
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "integration",
                      "name"
                    ]
                  }
                },
                "required": [
                  "id",
                  "name",
                  "resource"
                ]
              }
            },
            "name": {
              "type": "string"
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          },
          "required": [
            "id",
            "allowedDurations",
            "category",
            "description",
            "tags",
            "roles",
            "name",
            "workflow"
          ]
        },
        "FullBundleResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "allowedDurations": {
                    "nullable": true,
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  },
                  "category": {
                    "type": "string",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "nullable": true
                  },
                  "tags": {
                    "nullable": true,
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "resource": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "integration": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid",
                                  "example": "00000000-0000-0000-0000-000000000000"
                                },
                                "application": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id",
                                "application",
                                "name"
                              ]
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id",
                            "integration",
                            "name"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "resource"
                      ]
                    }
                  },
                  "name": {
                    "type": "string"
                  },
                  "workflow": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "name"
                    ]
                  }
                },
                "required": [
                  "id",
                  "allowedDurations",
                  "category",
                  "description",
                  "tags",
                  "roles",
                  "name",
                  "workflow"
                ]
              }
            }
          },
          "required": [
            "result"
          ]
        },
        "IdParamsSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            }
          },
          "required": [
            "id"
          ]
        },
        "PublicBundleCreateBodySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "uniqueItems": true,
              "description": "If null, the company's default allowed durations will be used",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "category": {
              "type": "string",
              "nullable": true,
              "minLength": 2,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "nullable": true,
              "maxLength": 2048
            },
            "tags": {
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              }
            },
            "roles": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "name",
            "roles",
            "workflow"
          ]
        },
        "BundleUpdatedBodySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "uniqueItems": true,
              "description": "If null, the company's default allowed durations will be used",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "category": {
              "type": "string",
              "nullable": true,
              "minLength": 2,
              "maxLength": 50
            },
            "description": {
              "type": "string",
              "nullable": true,
              "maxLength": 2048
            },
            "tags": {
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string",
                "maxLength": 50,
                "minLength": 2
              }
            },
            "roles": {
              "minItems": 1,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "BundleDestroyResponseSchema": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "boolean"
            }
          },
          "required": [
            "ok"
          ]
        },
        "PolicyIndexResultResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "number": {
              "type": "number"
            },
            "sortOrder": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "number",
            "sortOrder"
          ]
        },
        "PolicyIndexResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "number": {
                    "type": "number"
                  },
                  "sortOrder": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "number",
                  "sortOrder"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "EnumPolicyGroupType": {
          "type": "string",
          "enum": [
            "group",
            "schedule"
          ]
        },
        "PolicyGroupResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "group",
                "schedule"
              ]
            },
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "type",
            "id",
            "name"
          ]
        },
        "PolicyBundleResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "PolicyApplicationResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          },
          "required": [
            "name"
          ]
        },
        "PolicyIntegrationResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "application": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "required": [
            "id",
            "name",
            "application"
          ]
        },
        "PolicyResourceResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "integration": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "application": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "application"
              ]
            }
          },
          "required": [
            "id",
            "name",
            "integration"
          ]
        },
        "PolicyRoleResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "name": {
              "type": "string"
            },
            "resource": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    },
                    "application": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "application"
                  ]
                }
              },
              "required": [
                "id",
                "name",
                "integration"
              ]
            }
          },
          "required": [
            "id",
            "name",
            "resource"
          ]
        },
        "FullPolicyResultResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "inGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "group",
                      "schedule"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "type",
                  "id",
                  "name"
                ]
              }
            },
            "bundles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name"
                ]
              }
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "name": {
                    "type": "string"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "type": "string"
                      },
                      "integration": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "application"
                        ]
                      }
                    },
                    "required": [
                      "id",
                      "name",
                      "integration"
                    ]
                  }
                },
                "required": [
                  "id",
                  "name",
                  "resource"
                ]
              }
            },
            "number": {
              "type": "number"
            },
            "sortOrder": {
              "type": "number"
            }
          },
          "required": [
            "id",
            "inGroups",
            "bundles",
            "roles",
            "number",
            "sortOrder"
          ]
        },
        "FullPolicyResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "inGroups": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "group",
                            "schedule"
                          ]
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "type",
                        "id",
                        "name"
                      ]
                    }
                  },
                  "bundles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid"
                        },
                        "name": {
                          "type": "string"
                        },
                        "resource": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "format": "uuid"
                            },
                            "name": {
                              "type": "string"
                            },
                            "integration": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "application": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "application"
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "integration"
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "resource"
                      ]
                    }
                  },
                  "number": {
                    "type": "number"
                  },
                  "sortOrder": {
                    "type": "number"
                  }
                },
                "required": [
                  "id",
                  "inGroups",
                  "bundles",
                  "roles",
                  "number",
                  "sortOrder"
                ]
              }
            }
          },
          "required": [
            "result"
          ]
        },
        "InGroupSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "group",
                "schedule"
              ]
            },
            "id": {
              "type": "string",
              "description": "A unique identifier/email of the group"
            }
          },
          "required": [
            "type",
            "id"
          ]
        },
        "PolicyCreateSchema": {
          "type": "object",
          "properties": {
            "inGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "group",
                      "schedule"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "A unique identifier/email of the group"
                  }
                },
                "required": [
                  "type",
                  "id"
                ]
              }
            },
            "bundles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "sortOrder": {
              "type": "number",
              "minimum": 1
            }
          },
          "required": [
            "inGroups",
            "bundles",
            "roles"
          ]
        },
        "PolicyUpdateSchema": {
          "type": "object",
          "properties": {
            "inGroups": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "group",
                      "schedule"
                    ]
                  },
                  "id": {
                    "type": "string",
                    "description": "A unique identifier/email of the group"
                  }
                },
                "required": [
                  "type",
                  "id"
                ]
              }
            },
            "bundles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "sortOrder": {
              "type": "number",
              "minimum": 1
            }
          }
        },
        "PolicyDestroyResponseSchema": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "boolean"
            }
          },
          "required": [
            "ok"
          ]
        },
        "IntegrationsListResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "application": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "name"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "application",
                  "name"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "EntityResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "email": {
              "type": "string",
              "format": "email",
              "example": "user@org.domain"
            }
          },
          "required": [
            "id",
            "email"
          ]
        },
        "IntegrationResultSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "application": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "name"
              ]
            },
            "allowedDurations": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ]
            },
            "maintainers": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "group"
                        ]
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "group"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "user"
                    ]
                  }
                ]
              }
            },
            "readonly": {
              "type": "boolean"
            },
            "allowChangingAccountPermissions": {
              "type": "boolean"
            },
            "allowCreatingAccounts": {
              "type": "boolean"
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowRequestsByDefault": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "allowAsGrantMethodByDefault": {
              "type": "boolean"
            },
            "autoAssignRecommendedOwners": {
              "type": "boolean"
            },
            "autoAssignRecommendedMaintainers": {
              "type": "boolean"
            },
            "notifyAboutExternalPermissionChanges": {
              "type": "boolean"
            },
            "owner": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@org.domain"
                }
              },
              "required": [
                "id",
                "email"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "application",
            "allowedDurations",
            "workflow",
            "maintainers",
            "readonly",
            "allowChangingAccountPermissions",
            "allowCreatingAccounts",
            "allowRequests",
            "allowRequestsByDefault",
            "allowAsGrantMethod",
            "allowAsGrantMethodByDefault",
            "autoAssignRecommendedOwners",
            "autoAssignRecommendedMaintainers",
            "notifyAboutExternalPermissionChanges",
            "owner",
            "name"
          ]
        },
        "IntegrationResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "application": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "allowedDurations": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  }
                },
                "workflow": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                },
                "maintainers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group"
                            ]
                          },
                          "group": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "group"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "user"
                            ]
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "user"
                        ]
                      }
                    ]
                  }
                },
                "readonly": {
                  "type": "boolean"
                },
                "allowChangingAccountPermissions": {
                  "type": "boolean"
                },
                "allowCreatingAccounts": {
                  "type": "boolean"
                },
                "allowRequests": {
                  "type": "boolean"
                },
                "allowRequestsByDefault": {
                  "type": "boolean"
                },
                "allowAsGrantMethod": {
                  "type": "boolean"
                },
                "allowAsGrantMethodByDefault": {
                  "type": "boolean"
                },
                "autoAssignRecommendedOwners": {
                  "type": "boolean"
                },
                "autoAssignRecommendedMaintainers": {
                  "type": "boolean"
                },
                "notifyAboutExternalPermissionChanges": {
                  "type": "boolean"
                },
                "owner": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@org.domain"
                    }
                  },
                  "required": [
                    "id",
                    "email"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "application",
                "allowedDurations",
                "workflow",
                "maintainers",
                "readonly",
                "allowChangingAccountPermissions",
                "allowCreatingAccounts",
                "allowRequests",
                "allowRequestsByDefault",
                "allowAsGrantMethod",
                "allowAsGrantMethodByDefault",
                "autoAssignRecommendedOwners",
                "autoAssignRecommendedMaintainers",
                "notifyAboutExternalPermissionChanges",
                "owner",
                "name"
              ]
            }
          },
          "required": [
            "result"
          ]
        },
        "UserEntitySchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": [
                "00000000-0000-0000-0000-000000000000",
                "user@org.domain",
                "uniq-identifier"
              ],
              "description": "A unique identifier/email of the user"
            }
          },
          "required": [
            "id"
          ]
        },
        "IntegrationsUpdateBodySchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "uniqueItems": true,
              "description": "If null, the company's default allowed durations will be used",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "maintainers": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "group"
                        ]
                      },
                      "group": {
                        "description": "If type is group, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the group"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "group"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      "user": {
                        "description": "If type is user, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the user"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "user"
                    ]
                  }
                ]
              }
            },
            "connectionJson": {
              "type": "object"
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowRequestsByDefault": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "allowAsGrantMethodByDefault": {
              "type": "boolean"
            },
            "autoAssignRecommendedMaintainers": {
              "type": "boolean"
            },
            "autoAssignRecommendedOwners": {
              "type": "boolean"
            },
            "notifyAboutExternalPermissionChanges": {
              "type": "boolean"
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                }
              },
              "required": [
                "id"
              ]
            },
            "owner": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": [
                    "00000000-0000-0000-0000-000000000000",
                    "user@org.domain",
                    "uniq-identifier"
                  ],
                  "description": "A unique identifier/email of the user"
                }
              },
              "required": [
                "id"
              ]
            }
          }
        },
        "NameSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            }
          },
          "required": [
            "name"
          ]
        },
        "IntegrationCreateBodyFieldsSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "uniqueItems": true,
              "description": "If null, the company's default allowed durations will be used",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "maintainers": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "group"
                        ]
                      },
                      "group": {
                        "description": "If type is group, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the group"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "group"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      "user": {
                        "description": "If type is user, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the user"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "user"
                    ]
                  }
                ]
              }
            },
            "application": {
              "example": {
                "name": "Google Groups"
              },
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            },
            "agentToken": {
              "example": {
                "name": "On prem agent"
              },
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "minLength": 2,
                      "maxLength": 50
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            },
            "allowChangingAccountPermissions": {
              "type": "boolean"
            },
            "allowCreatingAccounts": {
              "type": "boolean"
            },
            "readonly": {
              "type": "boolean"
            },
            "connectionJson": {
              "type": "object",
              "nullable": true
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowRequestsByDefault": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "allowAsGrantMethodByDefault": {
              "type": "boolean"
            },
            "autoAssignRecommendedMaintainers": {
              "type": "boolean"
            },
            "autoAssignRecommendedOwners": {
              "type": "boolean"
            },
            "notifyAboutExternalPermissionChanges": {
              "type": "boolean"
            },
            "workflow": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                }
              },
              "required": [
                "id"
              ]
            },
            "owner": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": [
                    "00000000-0000-0000-0000-000000000000",
                    "user@org.domain",
                    "uniq-identifier"
                  ],
                  "description": "A unique identifier/email of the user"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "name",
            "maintainers",
            "application",
            "allowChangingAccountPermissions",
            "allowCreatingAccounts",
            "readonly",
            "connectionJson",
            "allowRequests",
            "allowRequestsByDefault",
            "allowAsGrantMethod",
            "allowAsGrantMethodByDefault",
            "autoAssignRecommendedMaintainers",
            "autoAssignRecommendedOwners",
            "notifyAboutExternalPermissionChanges",
            "workflow",
            "owner"
          ]
        },
        "IntegrationDestroyResponseSchema": {
          "type": "object",
          "properties": {
            "ok": {
              "type": "boolean"
            }
          },
          "required": [
            "ok"
          ]
        },
        "IntegrationResourceListItemResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "integration": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "application": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "application",
                "name"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "integration",
            "name"
          ]
        },
        "IntegrationResourcesListResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "integration": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                      },
                      "application": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "application",
                      "name"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "integration",
                  "name"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "WorkflowSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "IntegrationResourceResultSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "integration": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "application": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "application",
                "name"
              ]
            },
            "allowedDurations": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "tags": {
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "userDefinedTags": {
              "nullable": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": {
              "type": "string",
              "nullable": true
            },
            "userDefinedDescription": {
              "type": "string",
              "nullable": true
            },
            "workflow": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              ]
            },
            "maintainers": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "group"
                        ]
                      },
                      "group": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "group"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      "user": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "user"
                    ]
                  }
                ]
              }
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "owner": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@org.domain"
                    }
                  },
                  "required": [
                    "id",
                    "email"
                  ]
                }
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "integration",
            "allowedDurations",
            "tags",
            "userDefinedTags",
            "description",
            "userDefinedDescription",
            "workflow",
            "maintainers",
            "allowRequests",
            "allowAsGrantMethod",
            "owner",
            "name"
          ]
        },
        "IntegrationResourceResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "application": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "application",
                    "name"
                  ]
                },
                "allowedDurations": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  }
                },
                "tags": {
                  "nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "userDefinedTags": {
                  "nullable": true,
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "description": {
                  "type": "string",
                  "nullable": true
                },
                "userDefinedDescription": {
                  "type": "string",
                  "nullable": true
                },
                "workflow": {
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                },
                "maintainers": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "group"
                            ]
                          },
                          "group": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "group"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "user"
                            ]
                          },
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "format": "uuid",
                                "example": "00000000-0000-0000-0000-000000000000"
                              },
                              "email": {
                                "type": "string",
                                "format": "email",
                                "example": "user@org.domain"
                              }
                            },
                            "required": [
                              "id",
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "user"
                        ]
                      }
                    ]
                  }
                },
                "allowRequests": {
                  "type": "boolean"
                },
                "allowAsGrantMethod": {
                  "type": "boolean"
                },
                "owner": {
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "example": "user@org.domain"
                        }
                      },
                      "required": [
                        "id",
                        "email"
                      ]
                    }
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "integration",
                "allowedDurations",
                "tags",
                "userDefinedTags",
                "description",
                "userDefinedDescription",
                "workflow",
                "maintainers",
                "allowRequests",
                "allowAsGrantMethod",
                "owner",
                "name"
              ]
            }
          },
          "required": [
            "result"
          ]
        },
        "PublicIntegrationResourcesUpdateBodySchema": {
          "type": "object",
          "properties": {
            "userDefinedDescription": {
              "type": "string",
              "maxLength": 2048
            },
            "userDefinedTags": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "tag"
              },
              "minLength": 2,
              "maxLength": 50
            },
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "maintainers": {
              "type": "array",
              "items": {
                "type": "object",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "group"
                        ]
                      },
                      "group": {
                        "description": "If type is group, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the group"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "group"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "enum": [
                          "user"
                        ]
                      },
                      "user": {
                        "description": "If type is user, this field is required with a unique id/email",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": [
                                  "00000000-0000-0000-0000-000000000000",
                                  "user@org.domain",
                                  "uniq-identifier"
                                ],
                                "description": "A unique identifier/email of the user"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          }
                        ]
                      }
                    },
                    "required": [
                      "type",
                      "user"
                    ]
                  }
                ]
              }
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "workflow": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            },
            "owner": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": [
                        "00000000-0000-0000-0000-000000000000",
                        "user@org.domain",
                        "uniq-identifier"
                      ],
                      "description": "A unique identifier/email of the user"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        },
        "IntegrationResourceRoleListItemResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "resource": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "application": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "application",
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "integration",
                "name"
              ]
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "resource",
            "name"
          ]
        },
        "IntegrationResourceRolesListResponseSchema": {
          "type": "object",
          "properties": {
            "pagination": {
              "type": "object",
              "properties": {
                "page": {
                  "type": "number",
                  "minimum": 1,
                  "description": "Current page"
                },
                "perPage": {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 100,
                  "description": "Number of results per page"
                },
                "totalResults": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of results"
                },
                "totalPages": {
                  "type": "number",
                  "minimum": 0,
                  "description": "Total number of pages"
                }
              },
              "required": [
                "page",
                "perPage",
                "totalResults",
                "totalPages"
              ]
            },
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "uuid",
                    "example": "00000000-0000-0000-0000-000000000000"
                  },
                  "resource": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "00000000-0000-0000-0000-000000000000"
                      },
                      "integration": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "application": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name"
                            ]
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "application",
                          "name"
                        ]
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "integration",
                      "name"
                    ]
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "resource",
                  "name"
                ]
              }
            }
          },
          "required": [
            "pagination",
            "result"
          ]
        },
        "IntegrationResourceRoleResultSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid",
              "example": "00000000-0000-0000-0000-000000000000"
            },
            "resource": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "integration": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "application": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "application",
                    "name"
                  ]
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "integration",
                "name"
              ]
            },
            "allowedDurations": {
              "type": "array",
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "workflow": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              ]
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "resource",
            "allowedDurations",
            "workflow",
            "allowRequests",
            "allowAsGrantMethod",
            "name"
          ]
        },
        "IntegrationResourceRoleResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "resource": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "integration": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "application": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "application",
                        "name"
                      ]
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "integration",
                    "name"
                  ]
                },
                "allowedDurations": {
                  "type": "array",
                  "items": {
                    "type": "number",
                    "enum": [
                      3600,
                      10800,
                      21600,
                      43200,
                      57600,
                      86400,
                      259200,
                      604800,
                      2628000,
                      7884000,
                      15768000,
                      31536000,
                      63072000,
                      -1
                    ]
                  }
                },
                "workflow": {
                  "nullable": true,
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "example": "00000000-0000-0000-0000-000000000000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  ]
                },
                "allowRequests": {
                  "type": "boolean"
                },
                "allowAsGrantMethod": {
                  "type": "boolean"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "resource",
                "allowedDurations",
                "workflow",
                "allowRequests",
                "allowAsGrantMethod",
                "name"
              ]
            }
          },
          "required": [
            "result"
          ]
        },
        "IntegrationResourceRolesUpdateBodySchema": {
          "type": "object",
          "properties": {
            "allowedDurations": {
              "type": "array",
              "nullable": true,
              "items": {
                "type": "number",
                "enum": [
                  3600,
                  10800,
                  21600,
                  43200,
                  57600,
                  86400,
                  259200,
                  604800,
                  2628000,
                  7884000,
                  15768000,
                  31536000,
                  63072000,
                  -1
                ]
              }
            },
            "allowRequests": {
              "type": "boolean"
            },
            "allowAsGrantMethod": {
              "type": "boolean"
            },
            "workflow": {
              "nullable": true,
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          }
        },
        "AccessRequestApplicationResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The application's name"
            }
          },
          "required": [
            "name"
          ]
        },
        "AccessRequestIntegrationResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The integration's id"
            },
            "name": {
              "type": "string",
              "description": "The integration's name"
            },
            "application": {
              "description": "The integration's application",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The application's name"
                    }
                  },
                  "required": [
                    "name"
                  ]
                }
              ]
            }
          },
          "required": [
            "id",
            "name",
            "application"
          ]
        },
        "AccessRequestResourceResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The resource's id"
            },
            "name": {
              "type": "string",
              "description": "The resource's name"
            },
            "integration": {
              "description": "The resource's integration",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The integration's id"
                    },
                    "name": {
                      "type": "string",
                      "description": "The integration's name"
                    },
                    "application": {
                      "description": "The integration's application",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The application's name"
                            }
                          },
                          "required": [
                            "name"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "application"
                  ]
                }
              ]
            }
          },
          "required": [
            "id",
            "name",
            "integration"
          ]
        },
        "AccessRequestRoleResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The role's id"
            },
            "name": {
              "type": "string",
              "description": "The role's name"
            },
            "isPrerequisite": {
              "type": "boolean",
              "description": "Was the role added because it is a prerequisite"
            },
            "resource": {
              "description": "The role's resource",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The resource's id"
                    },
                    "name": {
                      "type": "string",
                      "description": "The resource's name"
                    },
                    "integration": {
                      "description": "The resource's integration",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The integration's id"
                            },
                            "name": {
                              "type": "string",
                              "description": "The integration's name"
                            },
                            "application": {
                              "description": "The integration's application",
                              "allOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The application's name"
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ]
                                }
                              ]
                            }
                          },
                          "required": [
                            "id",
                            "name",
                            "application"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "integration"
                  ]
                }
              ]
            }
          },
          "required": [
            "id",
            "name",
            "isPrerequisite",
            "resource"
          ]
        },
        "EnumPublicTicketStatus": {
          "type": "string",
          "enum": [
            "approved",
            "cancelled",
            "failed",
            "granted",
            "permissionInProgress",
            "rejected",
            "revoked",
            "waitingForIT",
            "waitingForApproval"
          ]
        },
        "EnumPublicTicketType": {
          "type": "string",
          "enum": [
            "bundle",
            "role"
          ]
        },
        "AccessRequestBaseTargetResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        "AccessRequestPublicResultSchema": {
          "type": "object",
          "properties": {
            "behalfOf": {
              "description": "The user the access was requested for",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@org.domain"
                    }
                  },
                  "required": [
                    "id",
                    "email"
                  ]
                }
              ]
            },
            "duration": {
              "type": "number",
              "description": "The requested duration in seconds (-1 means forever)"
            },
            "id": {
              "type": "string",
              "description": "The access request's id"
            },
            "justification": {
              "type": "string",
              "description": "The justification for the access request"
            },
            "number": {
              "type": "number",
              "description": "The access request's number"
            },
            "roles": {
              "description": "The access request's roles to receive",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The role's id"
                  },
                  "name": {
                    "type": "string",
                    "description": "The role's name"
                  },
                  "isPrerequisite": {
                    "type": "boolean",
                    "description": "Was the role added because it is a prerequisite"
                  },
                  "resource": {
                    "description": "The role's resource",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The resource's id"
                          },
                          "name": {
                            "type": "string",
                            "description": "The resource's name"
                          },
                          "integration": {
                            "description": "The resource's integration",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The integration's id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The integration's name"
                                  },
                                  "application": {
                                    "description": "The integration's application",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "name": {
                                            "type": "string",
                                            "description": "The application's name"
                                          }
                                        },
                                        "required": [
                                          "name"
                                        ]
                                      }
                                    ]
                                  }
                                },
                                "required": [
                                  "id",
                                  "name",
                                  "application"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "name",
                          "integration"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "id",
                  "name",
                  "isPrerequisite",
                  "resource"
                ]
              }
            },
            "status": {
              "description": "The access request's status",
              "type": "string",
              "enum": [
                "approved",
                "cancelled",
                "failed",
                "granted",
                "permissionInProgress",
                "rejected",
                "revoked",
                "waitingForIT",
                "waitingForApproval"
              ]
            },
            "target": {
              "description": "The access request's target",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The target's type",
                      "type": "string",
                      "enum": [
                        "bundle",
                        "role"
                      ]
                    },
                    "bundle": {
                      "description": "The target bundle",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The bundle's id"
                            },
                            "name": {
                              "type": "string",
                              "description": "The bundle's name"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "bundle"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The target's type",
                      "type": "string",
                      "enum": [
                        "bundle",
                        "role"
                      ]
                    },
                    "role": {
                      "description": "The target role",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The role's id"
                            },
                            "name": {
                              "type": "string",
                              "description": "The role's name"
                            }
                          },
                          "required": [
                            "id",
                            "name"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "role"
                  ]
                }
              ],
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The target's type",
                      "type": "string",
                      "enum": [
                        "bundle",
                        "role"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              ]
            },
            "user": {
              "description": "The access request's creator",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid",
                      "example": "00000000-0000-0000-0000-000000000000"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "example": "user@org.domain"
                    }
                  },
                  "required": [
                    "id",
                    "email"
                  ]
                }
              ]
            }
          },
          "required": [
            "behalfOf",
            "duration",
            "id",
            "justification",
            "number",
            "roles",
            "status",
            "target",
            "user"
          ]
        },
        "AccessRequestResponseSchema": {
          "type": "object",
          "properties": {
            "result": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "behalfOf": {
                    "description": "The user the access was requested for",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    ]
                  },
                  "duration": {
                    "type": "number",
                    "description": "The requested duration in seconds (-1 means forever)"
                  },
                  "id": {
                    "type": "string",
                    "description": "The access request's id"
                  },
                  "justification": {
                    "type": "string",
                    "description": "The justification for the access request"
                  },
                  "number": {
                    "type": "number",
                    "description": "The access request's number"
                  },
                  "roles": {
                    "description": "The access request's roles to receive",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The role's id"
                        },
                        "name": {
                          "type": "string",
                          "description": "The role's name"
                        },
                        "isPrerequisite": {
                          "type": "boolean",
                          "description": "Was the role added because it is a prerequisite"
                        },
                        "resource": {
                          "description": "The role's resource",
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The resource's id"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The resource's name"
                                },
                                "integration": {
                                  "description": "The resource's integration",
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The integration's id"
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "The integration's name"
                                        },
                                        "application": {
                                          "description": "The integration's application",
                                          "allOf": [
                                            {
                                              "type": "object",
                                              "properties": {
                                                "name": {
                                                  "type": "string",
                                                  "description": "The application's name"
                                                }
                                              },
                                              "required": [
                                                "name"
                                              ]
                                            }
                                          ]
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "name",
                                        "application"
                                      ]
                                    }
                                  ]
                                }
                              },
                              "required": [
                                "id",
                                "name",
                                "integration"
                              ]
                            }
                          ]
                        }
                      },
                      "required": [
                        "id",
                        "name",
                        "isPrerequisite",
                        "resource"
                      ]
                    }
                  },
                  "status": {
                    "description": "The access request's status",
                    "type": "string",
                    "enum": [
                      "approved",
                      "cancelled",
                      "failed",
                      "granted",
                      "permissionInProgress",
                      "rejected",
                      "revoked",
                      "waitingForIT",
                      "waitingForApproval"
                    ]
                  },
                  "target": {
                    "description": "The access request's target",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The target's type",
                            "type": "string",
                            "enum": [
                              "bundle",
                              "role"
                            ]
                          },
                          "bundle": {
                            "description": "The target bundle",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The bundle's id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The bundle's name"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "bundle"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The target's type",
                            "type": "string",
                            "enum": [
                              "bundle",
                              "role"
                            ]
                          },
                          "role": {
                            "description": "The target role",
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The role's id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The role's name"
                                  }
                                },
                                "required": [
                                  "id",
                                  "name"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "type",
                          "role"
                        ]
                      }
                    ],
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "description": "The target's type",
                            "type": "string",
                            "enum": [
                              "bundle",
                              "role"
                            ]
                          }
                        },
                        "required": [
                          "type"
                        ]
                      }
                    ]
                  },
                  "user": {
                    "description": "The access request's creator",
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "example": "00000000-0000-0000-0000-000000000000"
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "example": "user@org.domain"
                          }
                        },
                        "required": [
                          "id",
                          "email"
                        ]
                      }
                    ]
                  }
                },
                "required": [
                  "behalfOf",
                  "duration",
                  "id",
                  "justification",
                  "number",
                  "roles",
                  "status",
                  "target",
                  "user"
                ]
              }
            }
          },
          "required": [
            "result"
          ]
        },
        "AccessRequestCreateBodySchema": {
          "type": "object",
          "properties": {
            "duration": {
              "type": "number",
              "description": "The duration of the access requested"
            },
            "justification": {
              "type": "string",
              "minLength": 1,
              "maxLength": 2048,
              "description": "The justification for the access request"
            },
            "target": {
              "description": "The target of the access request",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The target's type",
                      "type": "string",
                      "enum": [
                        "bundle",
                        "role"
                      ]
                    },
                    "bundle": {
                      "description": "The target's bundle",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The target bundle's id"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "bundle"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "The target's type",
                      "type": "string",
                      "enum": [
                        "bundle",
                        "role"
                      ]
                    },
                    "role": {
                      "description": "The target's role",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The target role's id"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "type",
                    "role"
                  ]
                }
              ]
            }
          },
          "required": [
            "duration",
            "justification",
            "target"
          ]
        },
        "AccessReviewAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "accessReview": {
              "type": "string",
              "example": "Access review 123",
              "description": "Name of the access review"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "ApprovalAlgorithmAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "approvalAlgorithm": {
              "type": "string",
              "example": "Approval algorithm 123",
              "description": "Name of the approval algorithm"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "AuditLogBaseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "BundleAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "bundle": {
              "type": "string",
              "example": "Bundle 123",
              "description": "Name of the bundle"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "IntegrationAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "integration": {
              "type": "string",
              "example": "Integration 123",
              "description": "Name of the integration"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "IntegrationResourceAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "integrationResource": {
              "type": "string",
              "example": "Resource 123",
              "description": "Name of the resource"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "IntegrationResourceRoleAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "integrationResourceRole": {
              "type": "string",
              "example": "Role 123",
              "description": "Name of the role"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "PolicyAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "policy": {
              "type": "number",
              "example": "1",
              "description": "Number of the policy"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "TicketAuditLogResponseSchema": {
          "type": "object",
          "properties": {
            "createdAt": {
              "format": "date-time",
              "type": "string",
              "example": "2021-01-21T00:00:00.000Z",
              "description": "Date of the audit log"
            },
            "type": {
              "type": "string",
              "enum": [
                "accessReview.created",
                "accessReview.deleted",
                "accessReview.updated",
                "accessReview.activated",
                "approvalAlgorithm.created",
                "approvalAlgorithm.deleted",
                "approvalAlgorithm.updated",
                "bundle.created",
                "bundle.deleted",
                "bundle.updated",
                "company.failed.sync.directories.groups",
                "company.failed.sync.directories.users",
                "company.failed.sync.hr.directManagers",
                "company.policy.permissions.updated",
                "company.policy.user.missingActors",
                "company.sync.directories.groups",
                "company.sync.directories.users",
                "company.sync.hr.directManagers",
                "integration.failed.access.give",
                "integration.failed.access.revoke",
                "integration.failed.sync.actors",
                "integration.failed.sync.assets",
                "integration.failed.sync.permissions",
                "integration.sync.actors",
                "integration.sync.assets",
                "integration.sync.permissions",
                "integration.updated.allowAsGrantMethod",
                "integration.updated.allowedDurations",
                "integration.updated.allowsRequests",
                "integration.updated.approvalAlgorithm",
                "integration.updated.autoAssignRecommendedResourceMaintainers",
                "integration.updated.autoAssignRecommendedResourceOwner",
                "integration.updated.canCreateActors",
                "integration.updated.canEditPermissions",
                "integration.updated.configuration",
                "integration.updated.defaultAllowAsGrantMethod",
                "integration.updated.defaultAllowsRequests",
                "integration.updated.image",
                "integration.updated.maintainers",
                "integration.updated.name",
                "integration.updated.notifyAboutExternalPermissions",
                "integration.updated.owner",
                "integration.updated.readonly",
                "integration.created",
                "integration.deleted",
                "integrationResource.created.manually",
                "integrationResource.deleted.manually",
                "integrationResource.updated.allowAsGrantMethod",
                "integrationResource.updated.allowedDurations",
                "integrationResource.updated.allowsRequests",
                "integrationResource.updated.approvalAlgorithm",
                "integrationResource.updated.displayName",
                "integrationResource.updated.maintainers",
                "integrationResource.updated.owner",
                "integrationResource.updated.userDefinedDescription",
                "integrationResource.updated.userDefinedTags",
                "integrationResourceRole.created.manually",
                "integrationResourceRole.deleted.manually",
                "integrationResourceRole.updated.allowAsGrantMethod",
                "integrationResourceRole.updated.allowedDurations",
                "integrationResourceRole.updated.allowsRequests",
                "integrationResourceRole.updated.approvalAlgorithm",
                "integrationResourceRole.updated.name",
                "policy.updated.data",
                "policy.updated.sortOrder",
                "policy.created",
                "policy.deleted",
                "ticket.failed.grant",
                "ticket.failed.revoke",
                "ticket.redirect.emptyGroup",
                "ticket.redirect.forward",
                "ticket.redirect.noManagers",
                "ticket.redirect.noTeamMembers",
                "ticket.redirect.toUser",
                "ticket.retry.grant",
                "ticket.retry.revoke",
                "ticket.sent.grant",
                "ticket.sent.revert",
                "ticket.sent.revoke",
                "ticket.automaticApproval",
                "ticket.created",
                "ticket.deleted",
                "ticket.finalApproved",
                "ticket.granted",
                "ticket.passedStage",
                "ticket.permissionAlreadyExist",
                "ticket.permissionReverted",
                "ticket.permissionWontRevoke",
                "ticket.revoked",
                "ticket.statusChanged",
                "ticket.taskCreated",
                "ticket.userApproved",
                "ticket.userDeclined"
              ],
              "example": "approvalAlgorithm.deleted",
              "description": "Type of the audit log"
            },
            "user": {
              "type": "string",
              "example": "user@org.domain",
              "description": "User who performed the action"
            },
            "ticket": {
              "type": "number",
              "example": "Ticket 123",
              "description": "Number of the ticket"
            }
          },
          "required": [
            "createdAt",
            "type"
          ]
        },
        "EnumMaintainerType_Group": {
          "type": "string",
          "enum": [
            "group"
          ]
        },
        "GroupMaintainerSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "group"
              ]
            },
            "group": {
              "description": "If type is group, this field is required with a unique id/email",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": [
                        "00000000-0000-0000-0000-000000000000",
                        "user@org.domain",
                        "uniq-identifier"
                      ],
                      "description": "A unique identifier/email of the group"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "group"
          ]
        },
        "EnumMaintainerType_User": {
          "type": "string",
          "enum": [
            "user"
          ]
        },
        "UserMaintainerSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "user"
              ]
            },
            "user": {
              "description": "If type is user, this field is required with a unique id/email",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": [
                        "00000000-0000-0000-0000-000000000000",
                        "user@org.domain",
                        "uniq-identifier"
                      ],
                      "description": "A unique identifier/email of the user"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "user"
          ]
        },
        "MaintainerGroupResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "group"
              ]
            },
            "group": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@org.domain"
                }
              },
              "required": [
                "id",
                "email"
              ]
            }
          },
          "required": [
            "type",
            "group"
          ]
        },
        "MaintainerUserResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "user"
              ]
            },
            "user": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid",
                  "example": "00000000-0000-0000-0000-000000000000"
                },
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@org.domain"
                }
              },
              "required": [
                "id",
                "email"
              ]
            }
          },
          "required": [
            "type",
            "user"
          ]
        },
        "EnumApprovalEntityGroup_DirectoryGroup": {
          "type": "string",
          "enum": [
            "DirectoryGroup"
          ]
        },
        "GroupEntityResponseSchema": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "minLength": 2,
              "maxLength": 50
            },
            "id": {
              "type": "string",
              "format": "uuid"
            }
          },
          "required": [
            "name",
            "id"
          ]
        },
        "ApprovalEntityGroupResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "DirectoryGroup"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "required": [
                "name",
                "id"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "EnumApprovalEntitySchedule_OnCallIntegrationSchedule": {
          "type": "string",
          "enum": [
            "OnCallIntegrationSchedule"
          ]
        },
        "ApprovalEntityScheduleResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "OnCallIntegrationSchedule"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "minLength": 2,
                  "maxLength": 50
                },
                "id": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "required": [
                "name",
                "id"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "EnumApprovalEntityUser_User": {
          "type": "string",
          "enum": [
            "User"
          ]
        },
        "UserEntityResponseSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "format": "uuid"
            },
            "email": {
              "type": "string",
              "format": "email"
            }
          },
          "required": [
            "id",
            "email"
          ]
        },
        "ApprovalEntityUserResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "User"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "uuid"
                },
                "email": {
                  "type": "string",
                  "format": "email"
                }
              },
              "required": [
                "id",
                "email"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "EnumApprovalEntityWithoutEntity": {
          "type": "string",
          "enum": [
            "Automatic",
            "DirectManager",
            "IntegrationMaintainer",
            "IntegrationOwner",
            "ResourceMaintainer",
            "ResourceOwner",
            "TeamMember"
          ]
        },
        "ApprovalEntityNullResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Automatic",
                "DirectManager",
                "IntegrationMaintainer",
                "IntegrationOwner",
                "ResourceMaintainer",
                "ResourceOwner",
                "TeamMember"
              ]
            },
            "entity": {
              "type": "null",
              "nullable": true,
              "example": null
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "EnumNotifiedEntityWithoutEntity": {
          "type": "string",
          "enum": [
            "DirectManager",
            "IntegrationMaintainer",
            "IntegrationOwner",
            "ResourceMaintainer",
            "ResourceOwner",
            "TeamMember"
          ]
        },
        "NotifiedEntityNullResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "DirectManager",
                "IntegrationMaintainer",
                "IntegrationOwner",
                "ResourceMaintainer",
                "ResourceOwner",
                "TeamMember"
              ]
            },
            "entity": {
              "type": "null",
              "nullable": true,
              "example": null
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "ApprovalEntityGroupSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "DirectoryGroup"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": [
                    "00000000-0000-0000-0000-000000000000",
                    "user@org.domain",
                    "uniq-identifier"
                  ],
                  "description": "A unique identifier/email of the group"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "ApprovalEntityScheduleSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "OnCallIntegrationSchedule"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": [
                    "00000000-0000-0000-0000-000000000000",
                    "uniq-identifier"
                  ],
                  "description": "A unique identifier of the schedule"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "ApprovalEntityUserSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "User"
              ]
            },
            "entity": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": [
                    "00000000-0000-0000-0000-000000000000",
                    "user@org.domain",
                    "uniq-identifier"
                  ],
                  "description": "A unique identifier/email of the user"
                }
              },
              "required": [
                "id"
              ]
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "ApprovalEntityNullSchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "Automatic",
                "DirectManager",
                "IntegrationMaintainer",
                "IntegrationOwner",
                "ResourceMaintainer",
                "ResourceOwner",
                "TeamMember"
              ]
            },
            "entity": {
              "type": "null",
              "example": null,
              "nullable": true
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "NotifiedApprovalEntityWithoutEntitySchema": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "DirectManager",
                "IntegrationMaintainer",
                "IntegrationOwner",
                "ResourceMaintainer",
                "ResourceOwner",
                "TeamMember"
              ]
            },
            "entity": {
              "type": "null",
              "example": null,
              "nullable": true
            }
          },
          "required": [
            "type",
            "entity"
          ]
        },
        "AccessRequestRoleTargetSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The role's id"
            },
            "name": {
              "type": "string",
              "description": "The role's name"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "AccessRequestRoleTargetResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            },
            "role": {
              "description": "The target role",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The role's id"
                    },
                    "name": {
                      "type": "string",
                      "description": "The role's name"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "role"
          ]
        },
        "AccessRequestBundleTargetSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The bundle's id"
            },
            "name": {
              "type": "string",
              "description": "The bundle's name"
            }
          },
          "required": [
            "id",
            "name"
          ]
        },
        "AccessRequestBundleTargetResponseSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            },
            "bundle": {
              "description": "The target bundle",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The bundle's id"
                    },
                    "name": {
                      "type": "string",
                      "description": "The bundle's name"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "bundle"
          ]
        },
        "AccessRequestBaseTargetCreateSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            }
          },
          "required": [
            "type"
          ]
        },
        "AccessRequestBundleCreateSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The target bundle's id"
            }
          },
          "required": [
            "id"
          ]
        },
        "AccessRequestBundleTargetCreateSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            },
            "bundle": {
              "description": "The target's bundle",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The target bundle's id"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "bundle"
          ]
        },
        "AccessRequestRoleCreateSchema": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "The target role's id"
            }
          },
          "required": [
            "id"
          ]
        },
        "AccessRequestRoleTargetCreateSchema": {
          "type": "object",
          "properties": {
            "type": {
              "description": "The target's type",
              "type": "string",
              "enum": [
                "bundle",
                "role"
              ]
            },
            "role": {
              "description": "The target's role",
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The target role's id"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              ]
            }
          },
          "required": [
            "type",
            "role"
          ]
        }
      }
    }
  }